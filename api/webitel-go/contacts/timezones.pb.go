// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: contacts/timezones.proto

package contacts

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeLocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Location name corresponding to
	// a file in the IANA Time Zone database,
	// such as "Europe/Kyiv".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Custom location offset (seconds east of UTC).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// Current time at this time zone location.
	// Query: `?fields=location{time.format(DateTime)}`
	Time          string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeLocation) Reset() {
	*x = TimeLocation{}
	mi := &file_contacts_timezones_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeLocation) ProtoMessage() {}

func (x *TimeLocation) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeLocation.ProtoReflect.Descriptor instead.
func (*TimeLocation) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{0}
}

func (x *TimeLocation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TimeLocation) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TimeLocation) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

// A Contact's timezone preference.
type Timezone struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the association. Never changes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Version of the latest update. Numeric sequence.
	Ver int32 `protobuf:"varint,2,opt,name=ver,proto3" json:"ver,omitempty"`
	// Unique ID of the latest version of the update.
	// This ID changes after any update to the underlying value(s).
	Etag string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	// The user who created this Field.
	CreatedAt int64 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp(milli) of the Field creation.
	CreatedBy *Lookup `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// Timestamp(milli) of the last Field update.
	// Take part in Etag generation.
	UpdatedAt int64 `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// The user who performed last Update.
	UpdatedBy *Lookup `protobuf:"bytes,8,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	// Indicates whether this association is the default
	// among others of the same type.
	Primary bool `protobuf:"varint,11,opt,name=primary,proto3" json:"primary,omitempty"`
	// Timezone dictionary reference value associated.
	Timezone      *Lookup `protobuf:"bytes,12,opt,name=timezone,proto3" json:"timezone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timezone) Reset() {
	*x = Timezone{}
	mi := &file_contacts_timezones_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timezone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timezone) ProtoMessage() {}

func (x *Timezone) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timezone.ProtoReflect.Descriptor instead.
func (*Timezone) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{1}
}

func (x *Timezone) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Timezone) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *Timezone) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *Timezone) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Timezone) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Timezone) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Timezone) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *Timezone) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *Timezone) GetTimezone() *Lookup {
	if x != nil {
		return x.Timezone
	}
	return nil
}

// An input of the Contact's timezones.
type InputTimezone struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique ID of the latest version of an existing resource.
	Etag string `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
	// Indicates whether this association must be default among others.
	Primary bool `protobuf:"varint,11,opt,name=primary,proto3" json:"primary,omitempty"`
	// Timezone dictionary reference value associated.
	Timezone      *Lookup `protobuf:"bytes,12,opt,name=timezone,proto3" json:"timezone,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputTimezone) Reset() {
	*x = InputTimezone{}
	mi := &file_contacts_timezones_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputTimezone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputTimezone) ProtoMessage() {}

func (x *InputTimezone) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputTimezone.ProtoReflect.Descriptor instead.
func (*InputTimezone) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{2}
}

func (x *InputTimezone) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *InputTimezone) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *InputTimezone) GetTimezone() *Lookup {
	if x != nil {
		return x.Timezone
	}
	return nil
}

// Timezone dataset.
// NOTE: Edge represents connection between two nodes.
// So this ContactTimezones.data are always subordinate to some contact.id.
type TimezoneList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timezone dataset page.
	Data []*Timezone `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// The page number of the partial result.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Indicates that this is a partial result.
	// More data available upon query: ?size=${data.len}&page=${page++}
	Next          bool `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimezoneList) Reset() {
	*x = TimezoneList{}
	mi := &file_contacts_timezones_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimezoneList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimezoneList) ProtoMessage() {}

func (x *TimezoneList) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimezoneList.ProtoReflect.Descriptor instead.
func (*TimezoneList) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{3}
}

func (x *TimezoneList) GetData() []*Timezone {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TimezoneList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *TimezoneList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

// Search for the Contact's Timezone(s) request.
type ListTimezonesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of result dataset records. offset = (page*size)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size count of records on result page. limit = (size++)
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Search term: location name;
	// `?` - matches any one character
	// `*` - matches 0 or more characters
	Q string `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	// Sort the result according to fields.
	Sort []string `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	// Contact ID associated with.
	ContactId string `protobuf:"bytes,5,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Record(s) with unique ID only.
	Id []string `protobuf:"bytes,7,rep,name=id,proto3" json:"id,omitempty"`
	// Primary timezone only.
	Primary       *wrapperspb.BoolValue `protobuf:"bytes,8,opt,name=primary,proto3" json:"primary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTimezonesRequest) Reset() {
	*x = ListTimezonesRequest{}
	mi := &file_contacts_timezones_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTimezonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTimezonesRequest) ProtoMessage() {}

func (x *ListTimezonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTimezonesRequest.ProtoReflect.Descriptor instead.
func (*ListTimezonesRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{4}
}

func (x *ListTimezonesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListTimezonesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListTimezonesRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ListTimezonesRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListTimezonesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListTimezonesRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *ListTimezonesRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListTimezonesRequest) GetPrimary() *wrapperspb.BoolValue {
	if x != nil {
		return x.Primary
	}
	return nil
}

type MergeTimezonesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON PATCH fields mask.
	// List of JPath fields specified in body(input).
	XJsonMask []string `protobuf:"bytes,1,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	// Link contact ID.
	ContactId string `protobuf:"bytes,3,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Array of the unique User(s) to associate with the Contact.
	// Any duplicate of an already linked user{id} will result in an error.
	Input         []*InputTimezone `protobuf:"bytes,4,rep,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeTimezonesRequest) Reset() {
	*x = MergeTimezonesRequest{}
	mi := &file_contacts_timezones_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeTimezonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTimezonesRequest) ProtoMessage() {}

func (x *MergeTimezonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTimezonesRequest.ProtoReflect.Descriptor instead.
func (*MergeTimezonesRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{5}
}

func (x *MergeTimezonesRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

func (x *MergeTimezonesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *MergeTimezonesRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *MergeTimezonesRequest) GetInput() []*InputTimezone {
	if x != nil {
		return x.Input
	}
	return nil
}

type ResetTimezonesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved into result of changes.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Link contact ID.
	ContactId string `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Final set of timezone(s) to be linked with the contact.
	// Timezone(s) that are already linked with the contact
	// but not given in here will be removed.
	Input         []*InputTimezone `protobuf:"bytes,3,rep,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetTimezonesRequest) Reset() {
	*x = ResetTimezonesRequest{}
	mi := &file_contacts_timezones_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetTimezonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetTimezonesRequest) ProtoMessage() {}

func (x *ResetTimezonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetTimezonesRequest.ProtoReflect.Descriptor instead.
func (*ResetTimezonesRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{6}
}

func (x *ResetTimezonesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ResetTimezonesRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *ResetTimezonesRequest) GetInput() []*InputTimezone {
	if x != nil {
		return x.Input
	}
	return nil
}

type DeleteTimezonesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Contact ID associated with.
	ContactId string `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Set of unique ID(s) to remove.
	Etag          []string `protobuf:"bytes,3,rep,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTimezonesRequest) Reset() {
	*x = DeleteTimezonesRequest{}
	mi := &file_contacts_timezones_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTimezonesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimezonesRequest) ProtoMessage() {}

func (x *DeleteTimezonesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimezonesRequest.ProtoReflect.Descriptor instead.
func (*DeleteTimezonesRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTimezonesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DeleteTimezonesRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *DeleteTimezonesRequest) GetEtag() []string {
	if x != nil {
		return x.Etag
	}
	return nil
}

// Locate single Link by unique IDentifier.
type LocateTimezoneRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved into result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Contact source ID.
	ContactId string `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Unique timezone link IDentifier.
	// Accept: `etag` (obsolete+) or `id`.
	Etag          string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateTimezoneRequest) Reset() {
	*x = LocateTimezoneRequest{}
	mi := &file_contacts_timezones_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateTimezoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateTimezoneRequest) ProtoMessage() {}

func (x *LocateTimezoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateTimezoneRequest.ProtoReflect.Descriptor instead.
func (*LocateTimezoneRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{8}
}

func (x *LocateTimezoneRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *LocateTimezoneRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *LocateTimezoneRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type UpdateTimezoneRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON PATCH fields mask.
	// List of JPath fields specified in body(input).
	XJsonMask []string `protobuf:"bytes,1,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	// Fields to be retrieved into result of changes.
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	// Link contact ID.
	ContactId string `protobuf:"bytes,3,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// NEW Update of the timezone link.
	Input         *InputTimezone `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTimezoneRequest) Reset() {
	*x = UpdateTimezoneRequest{}
	mi := &file_contacts_timezones_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTimezoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTimezoneRequest) ProtoMessage() {}

func (x *UpdateTimezoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTimezoneRequest.ProtoReflect.Descriptor instead.
func (*UpdateTimezoneRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTimezoneRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

func (x *UpdateTimezoneRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateTimezoneRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *UpdateTimezoneRequest) GetInput() *InputTimezone {
	if x != nil {
		return x.Input
	}
	return nil
}

type DeleteTimezoneRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Contact ID associated with.
	ContactId string `protobuf:"bytes,2,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	// Unique ID to remove.
	Etag          string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTimezoneRequest) Reset() {
	*x = DeleteTimezoneRequest{}
	mi := &file_contacts_timezones_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTimezoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTimezoneRequest) ProtoMessage() {}

func (x *DeleteTimezoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timezones_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTimezoneRequest.ProtoReflect.Descriptor instead.
func (*DeleteTimezoneRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timezones_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTimezoneRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DeleteTimezoneRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *DeleteTimezoneRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

var File_contacts_timezones_proto protoreflect.FileDescriptor

const file_contacts_timezones_proto_rawDesc = "" +
	"\n" +
	"\x18contacts/timezones.proto\x12\x10webitel.contacts\x1a\x15contacts/fields.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"N\n" +
	"\fTimeLocation\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x12\n" +
	"\x04time\x18\x03 \x01(\tR\x04time\"\xc5\x02\n" +
	"\bTimezone\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03ver\x18\x02 \x01(\x05R\x03ver\x12\x12\n" +
	"\x04etag\x18\x03 \x01(\tR\x04etag\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x127\n" +
	"\n" +
	"created_by\x18\x06 \x01(\v2\x18.webitel.contacts.LookupR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\x03R\tupdatedAt\x127\n" +
	"\n" +
	"updated_by\x18\b \x01(\v2\x18.webitel.contacts.LookupR\tupdatedBy\x12\x18\n" +
	"\aprimary\x18\v \x01(\bR\aprimary\x124\n" +
	"\btimezone\x18\f \x01(\v2\x18.webitel.contacts.LookupR\btimezone:\x03\x92A\x00\"\x90\x01\n" +
	"\rInputTimezone\x12!\n" +
	"\x04etag\x18\x01 \x01(\tB\r\x92A\n" +
	"\xca>\a\xfa\x02\x04etagR\x04etag\x12\x18\n" +
	"\aprimary\x18\v \x01(\bR\aprimary\x124\n" +
	"\btimezone\x18\f \x01(\v2\x18.webitel.contacts.LookupR\btimezone:\f\x92A\t\n" +
	"\a\xd2\x01\x04etag\"k\n" +
	"\fTimezoneList\x12.\n" +
	"\x04data\x18\x01 \x03(\v2\x1a.webitel.contacts.TimezoneR\x04data\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x03 \x01(\bR\x04next:\x03\x92A\x00\"\xdd\x01\n" +
	"\x14ListTimezonesRequest\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x05R\x04size\x12\f\n" +
	"\x01q\x18\x06 \x01(\tR\x01q\x12\x12\n" +
	"\x04sort\x18\x03 \x03(\tR\x04sort\x12\x16\n" +
	"\x06fields\x18\x04 \x03(\tR\x06fields\x12\x1d\n" +
	"\n" +
	"contact_id\x18\x05 \x01(\tR\tcontactId\x12\x0e\n" +
	"\x02id\x18\a \x03(\tR\x02id\x124\n" +
	"\aprimary\x18\b \x01(\v2\x1a.google.protobuf.BoolValueR\aprimary\"\xe1\x01\n" +
	"\x15MergeTimezonesRequest\x129\n" +
	"\vx_json_mask\x18\x01 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12\x1d\n" +
	"\n" +
	"contact_id\x18\x03 \x01(\tR\tcontactId\x12:\n" +
	"\x05input\x18\x04 \x03(\v2\x1f.webitel.contacts.InputTimezoneB\x03\x92A\x00R\x05input:\x1a\x92A\x17\n" +
	"\x15\xd2\x01\n" +
	"contact_id\xd2\x01\x05input\"\xac\x01\n" +
	"\x15ResetTimezonesRequest\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x1d\n" +
	"\n" +
	"contact_id\x18\x02 \x01(\tR\tcontactId\x12@\n" +
	"\x05input\x18\x03 \x03(\v2\x1f.webitel.contacts.InputTimezoneB\t\x92A\x06\xa8\x01\x01\xb0\x01\x01R\x05input:\x1a\x92A\x17\n" +
	"\x15\xd2\x01\n" +
	"contact_id\xd2\x01\x05input\"\x89\x01\n" +
	"\x16DeleteTimezonesRequest\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x1d\n" +
	"\n" +
	"contact_id\x18\x02 \x01(\tR\tcontactId\x12\x1d\n" +
	"\x04etag\x18\x03 \x03(\tB\t\x92A\x06\xa8\x01\x01\xb0\x01\x01R\x04etag:\x19\x92A\x16\n" +
	"\x14\xd2\x01\n" +
	"contact_id\xd2\x01\x04etag\"m\n" +
	"\x15LocateTimezoneRequest\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x1d\n" +
	"\n" +
	"contact_id\x18\x02 \x01(\tR\tcontactId\x12\x1d\n" +
	"\x04etag\x18\x03 \x01(\tB\t\x92A\x06\xa2\x02\x03\\w+R\x04etag\"\xdc\x01\n" +
	"\x15UpdateTimezoneRequest\x129\n" +
	"\vx_json_mask\x18\x01 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12\x1d\n" +
	"\n" +
	"contact_id\x18\x03 \x01(\tR\tcontactId\x125\n" +
	"\x05input\x18\x04 \x01(\v2\x1f.webitel.contacts.InputTimezoneR\x05input:\x1a\x92A\x17\n" +
	"\x15\xd2\x01\n" +
	"contact_id\xd2\x01\x05input\"\x8a\x01\n" +
	"\x15DeleteTimezoneRequest\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x1d\n" +
	"\n" +
	"contact_id\x18\x02 \x01(\tR\tcontactId\x12\x1f\n" +
	"\x04etag\x18\x03 \x01(\tB\v\x92A\b\x8a\x01\x05^\\.+$R\x04etag:\x19\x92A\x16\n" +
	"\x14\xd2\x01\n" +
	"contact_id\xd2\x01\x04etag2\x95\b\n" +
	"\tTimezones\x12\x81\x01\n" +
	"\rListTimezones\x12&.webitel.contacts.ListTimezonesRequest\x1a\x1e.webitel.contacts.TimezoneList\"(\x82\xd3\xe4\x93\x02\"\x12 /contacts/{contact_id}/timezones\x12\x8a\x01\n" +
	"\x0eMergeTimezones\x12'.webitel.contacts.MergeTimezonesRequest\x1a\x1e.webitel.contacts.TimezoneList\"/\x82\xd3\xe4\x93\x02):\x05input\" /contacts/{contact_id}/timezones\x12\x8a\x01\n" +
	"\x0eResetTimezones\x12'.webitel.contacts.ResetTimezonesRequest\x1a\x1e.webitel.contacts.TimezoneList\"/\x82\xd3\xe4\x93\x02):\x05input\x1a /contacts/{contact_id}/timezones\x12\x85\x01\n" +
	"\x0fDeleteTimezones\x12(.webitel.contacts.DeleteTimezonesRequest\x1a\x1e.webitel.contacts.TimezoneList\"(\x82\xd3\xe4\x93\x02\"* /contacts/{contact_id}/timezones\x12\x86\x01\n" +
	"\x0eLocateTimezone\x12'.webitel.contacts.LocateTimezoneRequest\x1a\x1a.webitel.contacts.Timezone\"/\x82\xd3\xe4\x93\x02)\x12'/contacts/{contact_id}/timezones/{etag}\x12\xcf\x01\n" +
	"\x0eUpdateTimezone\x12'.webitel.contacts.UpdateTimezoneRequest\x1a\x1e.webitel.contacts.TimezoneList\"t\x82\xd3\xe4\x93\x02n:\x05inputZ6:\x05input2-/contacts/{contact_id}/timezones/{input.etag}\x1a-/contacts/{contact_id}/timezones/{input.etag}\x12\x86\x01\n" +
	"\x0eDeleteTimezone\x12'.webitel.contacts.DeleteTimezoneRequest\x1a\x1a.webitel.contacts.Timezone\"/\x82\xd3\xe4\x93\x02)*'/contacts/{contact_id}/timezones/{etag}B\xa9\x01\n" +
	"\x14com.webitel.contactsB\x0eTimezonesProtoP\x01Z webitel.go/api/contacts;contacts\xa2\x02\x03WCX\xaa\x02\x10Webitel.Contacts\xca\x02\x10Webitel\\Contacts\xe2\x02\x1cWebitel\\Contacts\\GPBMetadata\xea\x02\x11Webitel::Contactsb\x06proto3"

var (
	file_contacts_timezones_proto_rawDescOnce sync.Once
	file_contacts_timezones_proto_rawDescData []byte
)

func file_contacts_timezones_proto_rawDescGZIP() []byte {
	file_contacts_timezones_proto_rawDescOnce.Do(func() {
		file_contacts_timezones_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contacts_timezones_proto_rawDesc), len(file_contacts_timezones_proto_rawDesc)))
	})
	return file_contacts_timezones_proto_rawDescData
}

var file_contacts_timezones_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_contacts_timezones_proto_goTypes = []any{
	(*TimeLocation)(nil),           // 0: webitel.contacts.TimeLocation
	(*Timezone)(nil),               // 1: webitel.contacts.Timezone
	(*InputTimezone)(nil),          // 2: webitel.contacts.InputTimezone
	(*TimezoneList)(nil),           // 3: webitel.contacts.TimezoneList
	(*ListTimezonesRequest)(nil),   // 4: webitel.contacts.ListTimezonesRequest
	(*MergeTimezonesRequest)(nil),  // 5: webitel.contacts.MergeTimezonesRequest
	(*ResetTimezonesRequest)(nil),  // 6: webitel.contacts.ResetTimezonesRequest
	(*DeleteTimezonesRequest)(nil), // 7: webitel.contacts.DeleteTimezonesRequest
	(*LocateTimezoneRequest)(nil),  // 8: webitel.contacts.LocateTimezoneRequest
	(*UpdateTimezoneRequest)(nil),  // 9: webitel.contacts.UpdateTimezoneRequest
	(*DeleteTimezoneRequest)(nil),  // 10: webitel.contacts.DeleteTimezoneRequest
	(*Lookup)(nil),                 // 11: webitel.contacts.Lookup
	(*wrapperspb.BoolValue)(nil),   // 12: google.protobuf.BoolValue
}
var file_contacts_timezones_proto_depIdxs = []int32{
	11, // 0: webitel.contacts.Timezone.created_by:type_name -> webitel.contacts.Lookup
	11, // 1: webitel.contacts.Timezone.updated_by:type_name -> webitel.contacts.Lookup
	11, // 2: webitel.contacts.Timezone.timezone:type_name -> webitel.contacts.Lookup
	11, // 3: webitel.contacts.InputTimezone.timezone:type_name -> webitel.contacts.Lookup
	1,  // 4: webitel.contacts.TimezoneList.data:type_name -> webitel.contacts.Timezone
	12, // 5: webitel.contacts.ListTimezonesRequest.primary:type_name -> google.protobuf.BoolValue
	2,  // 6: webitel.contacts.MergeTimezonesRequest.input:type_name -> webitel.contacts.InputTimezone
	2,  // 7: webitel.contacts.ResetTimezonesRequest.input:type_name -> webitel.contacts.InputTimezone
	2,  // 8: webitel.contacts.UpdateTimezoneRequest.input:type_name -> webitel.contacts.InputTimezone
	4,  // 9: webitel.contacts.Timezones.ListTimezones:input_type -> webitel.contacts.ListTimezonesRequest
	5,  // 10: webitel.contacts.Timezones.MergeTimezones:input_type -> webitel.contacts.MergeTimezonesRequest
	6,  // 11: webitel.contacts.Timezones.ResetTimezones:input_type -> webitel.contacts.ResetTimezonesRequest
	7,  // 12: webitel.contacts.Timezones.DeleteTimezones:input_type -> webitel.contacts.DeleteTimezonesRequest
	8,  // 13: webitel.contacts.Timezones.LocateTimezone:input_type -> webitel.contacts.LocateTimezoneRequest
	9,  // 14: webitel.contacts.Timezones.UpdateTimezone:input_type -> webitel.contacts.UpdateTimezoneRequest
	10, // 15: webitel.contacts.Timezones.DeleteTimezone:input_type -> webitel.contacts.DeleteTimezoneRequest
	3,  // 16: webitel.contacts.Timezones.ListTimezones:output_type -> webitel.contacts.TimezoneList
	3,  // 17: webitel.contacts.Timezones.MergeTimezones:output_type -> webitel.contacts.TimezoneList
	3,  // 18: webitel.contacts.Timezones.ResetTimezones:output_type -> webitel.contacts.TimezoneList
	3,  // 19: webitel.contacts.Timezones.DeleteTimezones:output_type -> webitel.contacts.TimezoneList
	1,  // 20: webitel.contacts.Timezones.LocateTimezone:output_type -> webitel.contacts.Timezone
	3,  // 21: webitel.contacts.Timezones.UpdateTimezone:output_type -> webitel.contacts.TimezoneList
	1,  // 22: webitel.contacts.Timezones.DeleteTimezone:output_type -> webitel.contacts.Timezone
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_contacts_timezones_proto_init() }
func file_contacts_timezones_proto_init() {
	if File_contacts_timezones_proto != nil {
		return
	}
	file_contacts_fields_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contacts_timezones_proto_rawDesc), len(file_contacts_timezones_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contacts_timezones_proto_goTypes,
		DependencyIndexes: file_contacts_timezones_proto_depIdxs,
		MessageInfos:      file_contacts_timezones_proto_msgTypes,
	}.Build()
	File_contacts_timezones_proto = out.File
	file_contacts_timezones_proto_goTypes = nil
	file_contacts_timezones_proto_depIdxs = nil
}

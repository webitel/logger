// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: file_policies.proto

package storage

import (
	engine "github.com/webitel/logger/api/engine"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilePolicyApplyRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ApplyToNullChannel bool                   `protobuf:"varint,2,opt,name=apply_to_null_channel,json=applyToNullChannel,proto3" json:"apply_to_null_channel,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FilePolicyApplyRequest) Reset() {
	*x = FilePolicyApplyRequest{}
	mi := &file_file_policies_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilePolicyApplyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePolicyApplyRequest) ProtoMessage() {}

func (x *FilePolicyApplyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePolicyApplyRequest.ProtoReflect.Descriptor instead.
func (*FilePolicyApplyRequest) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{0}
}

func (x *FilePolicyApplyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FilePolicyApplyRequest) GetApplyToNullChannel() bool {
	if x != nil {
		return x.ApplyToNullChannel
	}
	return false
}

type FilePolicyApplyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilePolicyApplyResponse) Reset() {
	*x = FilePolicyApplyResponse{}
	mi := &file_file_policies_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilePolicyApplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePolicyApplyResponse) ProtoMessage() {}

func (x *FilePolicyApplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePolicyApplyResponse.ProtoReflect.Descriptor instead.
func (*FilePolicyApplyResponse) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{1}
}

func (x *FilePolicyApplyResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FilePolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy     *engine.Lookup         `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy     *engine.Lookup         `protobuf:"bytes,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Enabled       bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MimeTypes     []string               `protobuf:"bytes,8,rep,name=mime_types,json=mimeTypes,proto3" json:"mime_types,omitempty"`
	SpeedDownload int64                  `protobuf:"varint,9,opt,name=speed_download,json=speedDownload,proto3" json:"speed_download,omitempty"`
	SpeedUpload   int64                  `protobuf:"varint,10,opt,name=speed_upload,json=speedUpload,proto3" json:"speed_upload,omitempty"`
	Description   string                 `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	Channels      []UploadFileChannel    `protobuf:"varint,12,rep,packed,name=channels,proto3,enum=storage.UploadFileChannel" json:"channels,omitempty"`
	RetentionDays int32                  `protobuf:"varint,13,opt,name=retention_days,json=retentionDays,proto3" json:"retention_days,omitempty"`
	Position      int32                  `protobuf:"varint,14,opt,name=position,proto3" json:"position,omitempty"`
	MaxUploadSize int64                  `protobuf:"varint,15,opt,name=max_upload_size,json=maxUploadSize,proto3" json:"max_upload_size,omitempty"`
	Encrypt       bool                   `protobuf:"varint,16,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilePolicy) Reset() {
	*x = FilePolicy{}
	mi := &file_file_policies_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePolicy) ProtoMessage() {}

func (x *FilePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePolicy.ProtoReflect.Descriptor instead.
func (*FilePolicy) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{2}
}

func (x *FilePolicy) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FilePolicy) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FilePolicy) GetCreatedBy() *engine.Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *FilePolicy) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FilePolicy) GetUpdatedBy() *engine.Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *FilePolicy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FilePolicy) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FilePolicy) GetMimeTypes() []string {
	if x != nil {
		return x.MimeTypes
	}
	return nil
}

func (x *FilePolicy) GetSpeedDownload() int64 {
	if x != nil {
		return x.SpeedDownload
	}
	return 0
}

func (x *FilePolicy) GetSpeedUpload() int64 {
	if x != nil {
		return x.SpeedUpload
	}
	return 0
}

func (x *FilePolicy) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FilePolicy) GetChannels() []UploadFileChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *FilePolicy) GetRetentionDays() int32 {
	if x != nil {
		return x.RetentionDays
	}
	return 0
}

func (x *FilePolicy) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *FilePolicy) GetMaxUploadSize() int64 {
	if x != nil {
		return x.MaxUploadSize
	}
	return 0
}

func (x *FilePolicy) GetEncrypt() bool {
	if x != nil {
		return x.Encrypt
	}
	return false
}

type CreateFilePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Enabled       bool                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MimeTypes     []string               `protobuf:"bytes,3,rep,name=mime_types,json=mimeTypes,proto3" json:"mime_types,omitempty"`
	SpeedDownload int64                  `protobuf:"varint,4,opt,name=speed_download,json=speedDownload,proto3" json:"speed_download,omitempty"`
	SpeedUpload   int64                  `protobuf:"varint,5,opt,name=speed_upload,json=speedUpload,proto3" json:"speed_upload,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Channels      []UploadFileChannel    `protobuf:"varint,7,rep,packed,name=channels,proto3,enum=storage.UploadFileChannel" json:"channels,omitempty"`
	RetentionDays int32                  `protobuf:"varint,8,opt,name=retention_days,json=retentionDays,proto3" json:"retention_days,omitempty"`
	MaxUploadSize int64                  `protobuf:"varint,9,opt,name=max_upload_size,json=maxUploadSize,proto3" json:"max_upload_size,omitempty"`
	Encrypt       bool                   `protobuf:"varint,10,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFilePolicyRequest) Reset() {
	*x = CreateFilePolicyRequest{}
	mi := &file_file_policies_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFilePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFilePolicyRequest) ProtoMessage() {}

func (x *CreateFilePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFilePolicyRequest.ProtoReflect.Descriptor instead.
func (*CreateFilePolicyRequest) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{3}
}

func (x *CreateFilePolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFilePolicyRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateFilePolicyRequest) GetMimeTypes() []string {
	if x != nil {
		return x.MimeTypes
	}
	return nil
}

func (x *CreateFilePolicyRequest) GetSpeedDownload() int64 {
	if x != nil {
		return x.SpeedDownload
	}
	return 0
}

func (x *CreateFilePolicyRequest) GetSpeedUpload() int64 {
	if x != nil {
		return x.SpeedUpload
	}
	return 0
}

func (x *CreateFilePolicyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateFilePolicyRequest) GetChannels() []UploadFileChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *CreateFilePolicyRequest) GetRetentionDays() int32 {
	if x != nil {
		return x.RetentionDays
	}
	return 0
}

func (x *CreateFilePolicyRequest) GetMaxUploadSize() int64 {
	if x != nil {
		return x.MaxUploadSize
	}
	return 0
}

func (x *CreateFilePolicyRequest) GetEncrypt() bool {
	if x != nil {
		return x.Encrypt
	}
	return false
}

type ListFilePolicies struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Next          bool                   `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items         []*FilePolicy          `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilePolicies) Reset() {
	*x = ListFilePolicies{}
	mi := &file_file_policies_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilePolicies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilePolicies) ProtoMessage() {}

func (x *ListFilePolicies) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilePolicies.ProtoReflect.Descriptor instead.
func (*ListFilePolicies) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{4}
}

func (x *ListFilePolicies) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListFilePolicies) GetItems() []*FilePolicy {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchFilePoliciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q             string                 `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort          string                 `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields        []string               `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	Id            []uint32               `protobuf:"varint,6,rep,packed,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchFilePoliciesRequest) Reset() {
	*x = SearchFilePoliciesRequest{}
	mi := &file_file_policies_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFilePoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFilePoliciesRequest) ProtoMessage() {}

func (x *SearchFilePoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFilePoliciesRequest.ProtoReflect.Descriptor instead.
func (*SearchFilePoliciesRequest) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{5}
}

func (x *SearchFilePoliciesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFilePoliciesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchFilePoliciesRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchFilePoliciesRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchFilePoliciesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchFilePoliciesRequest) GetId() []uint32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type ReadFilePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFilePolicyRequest) Reset() {
	*x = ReadFilePolicyRequest{}
	mi := &file_file_policies_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFilePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFilePolicyRequest) ProtoMessage() {}

func (x *ReadFilePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFilePolicyRequest.ProtoReflect.Descriptor instead.
func (*ReadFilePolicyRequest) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{6}
}

func (x *ReadFilePolicyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateFilePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Enabled       bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MimeTypes     []string               `protobuf:"bytes,4,rep,name=mime_types,json=mimeTypes,proto3" json:"mime_types,omitempty"`
	SpeedDownload int64                  `protobuf:"varint,5,opt,name=speed_download,json=speedDownload,proto3" json:"speed_download,omitempty"`
	SpeedUpload   int64                  `protobuf:"varint,6,opt,name=speed_upload,json=speedUpload,proto3" json:"speed_upload,omitempty"`
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Channels      []UploadFileChannel    `protobuf:"varint,8,rep,packed,name=channels,proto3,enum=storage.UploadFileChannel" json:"channels,omitempty"`
	RetentionDays int32                  `protobuf:"varint,9,opt,name=retention_days,json=retentionDays,proto3" json:"retention_days,omitempty"`
	MaxUploadSize int64                  `protobuf:"varint,10,opt,name=max_upload_size,json=maxUploadSize,proto3" json:"max_upload_size,omitempty"`
	Encrypt       bool                   `protobuf:"varint,11,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFilePolicyRequest) Reset() {
	*x = UpdateFilePolicyRequest{}
	mi := &file_file_policies_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFilePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFilePolicyRequest) ProtoMessage() {}

func (x *UpdateFilePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFilePolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateFilePolicyRequest) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateFilePolicyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateFilePolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFilePolicyRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateFilePolicyRequest) GetMimeTypes() []string {
	if x != nil {
		return x.MimeTypes
	}
	return nil
}

func (x *UpdateFilePolicyRequest) GetSpeedDownload() int64 {
	if x != nil {
		return x.SpeedDownload
	}
	return 0
}

func (x *UpdateFilePolicyRequest) GetSpeedUpload() int64 {
	if x != nil {
		return x.SpeedUpload
	}
	return 0
}

func (x *UpdateFilePolicyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateFilePolicyRequest) GetChannels() []UploadFileChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *UpdateFilePolicyRequest) GetRetentionDays() int32 {
	if x != nil {
		return x.RetentionDays
	}
	return 0
}

func (x *UpdateFilePolicyRequest) GetMaxUploadSize() int64 {
	if x != nil {
		return x.MaxUploadSize
	}
	return 0
}

func (x *UpdateFilePolicyRequest) GetEncrypt() bool {
	if x != nil {
		return x.Encrypt
	}
	return false
}

type PatchFilePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []string               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Enabled       bool                   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MimeTypes     []string               `protobuf:"bytes,5,rep,name=mime_types,json=mimeTypes,proto3" json:"mime_types,omitempty"`
	SpeedDownload int64                  `protobuf:"varint,6,opt,name=speed_download,json=speedDownload,proto3" json:"speed_download,omitempty"`
	SpeedUpload   int64                  `protobuf:"varint,7,opt,name=speed_upload,json=speedUpload,proto3" json:"speed_upload,omitempty"`
	Description   string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Channels      []UploadFileChannel    `protobuf:"varint,9,rep,packed,name=channels,proto3,enum=storage.UploadFileChannel" json:"channels,omitempty"`
	RetentionDays int32                  `protobuf:"varint,10,opt,name=retention_days,json=retentionDays,proto3" json:"retention_days,omitempty"`
	MaxUploadSize int64                  `protobuf:"varint,11,opt,name=max_upload_size,json=maxUploadSize,proto3" json:"max_upload_size,omitempty"`
	Encrypt       bool                   `protobuf:"varint,12,opt,name=encrypt,proto3" json:"encrypt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchFilePolicyRequest) Reset() {
	*x = PatchFilePolicyRequest{}
	mi := &file_file_policies_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchFilePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchFilePolicyRequest) ProtoMessage() {}

func (x *PatchFilePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchFilePolicyRequest.ProtoReflect.Descriptor instead.
func (*PatchFilePolicyRequest) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{8}
}

func (x *PatchFilePolicyRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *PatchFilePolicyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchFilePolicyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PatchFilePolicyRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PatchFilePolicyRequest) GetMimeTypes() []string {
	if x != nil {
		return x.MimeTypes
	}
	return nil
}

func (x *PatchFilePolicyRequest) GetSpeedDownload() int64 {
	if x != nil {
		return x.SpeedDownload
	}
	return 0
}

func (x *PatchFilePolicyRequest) GetSpeedUpload() int64 {
	if x != nil {
		return x.SpeedUpload
	}
	return 0
}

func (x *PatchFilePolicyRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PatchFilePolicyRequest) GetChannels() []UploadFileChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *PatchFilePolicyRequest) GetRetentionDays() int32 {
	if x != nil {
		return x.RetentionDays
	}
	return 0
}

func (x *PatchFilePolicyRequest) GetMaxUploadSize() int64 {
	if x != nil {
		return x.MaxUploadSize
	}
	return 0
}

func (x *PatchFilePolicyRequest) GetEncrypt() bool {
	if x != nil {
		return x.Encrypt
	}
	return false
}

type DeleteFilePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFilePolicyRequest) Reset() {
	*x = DeleteFilePolicyRequest{}
	mi := &file_file_policies_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFilePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFilePolicyRequest) ProtoMessage() {}

func (x *DeleteFilePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFilePolicyRequest.ProtoReflect.Descriptor instead.
func (*DeleteFilePolicyRequest) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteFilePolicyRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type MovePositionFilePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromId        int32                  `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId          int32                  `protobuf:"varint,2,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MovePositionFilePolicyRequest) Reset() {
	*x = MovePositionFilePolicyRequest{}
	mi := &file_file_policies_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovePositionFilePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovePositionFilePolicyRequest) ProtoMessage() {}

func (x *MovePositionFilePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovePositionFilePolicyRequest.ProtoReflect.Descriptor instead.
func (*MovePositionFilePolicyRequest) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{10}
}

func (x *MovePositionFilePolicyRequest) GetFromId() int32 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *MovePositionFilePolicyRequest) GetToId() int32 {
	if x != nil {
		return x.ToId
	}
	return 0
}

type MovePositionFilePolicyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MovePositionFilePolicyResponse) Reset() {
	*x = MovePositionFilePolicyResponse{}
	mi := &file_file_policies_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovePositionFilePolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovePositionFilePolicyResponse) ProtoMessage() {}

func (x *MovePositionFilePolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_file_policies_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovePositionFilePolicyResponse.ProtoReflect.Descriptor instead.
func (*MovePositionFilePolicyResponse) Descriptor() ([]byte, []int) {
	return file_file_policies_proto_rawDescGZIP(), []int{11}
}

func (x *MovePositionFilePolicyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_file_policies_proto protoreflect.FileDescriptor

const file_file_policies_proto_rawDesc = "" +
	"\n" +
	"\x13file_policies.proto\x12\astorage\x1a\vconst.proto\x1a\x1cgoogle/api/annotations.proto\x1a\n" +
	"file.proto\"[\n" +
	"\x16FilePolicyApplyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x121\n" +
	"\x15apply_to_null_channel\x18\x02 \x01(\bR\x12applyToNullChannel\"/\n" +
	"\x17FilePolicyApplyResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"\xae\x04\n" +
	"\n" +
	"FilePolicy\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1d\n" +
	"\n" +
	"created_at\x18\x02 \x01(\x03R\tcreatedAt\x12-\n" +
	"\n" +
	"created_by\x18\x03 \x01(\v2\x0e.engine.LookupR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\x03R\tupdatedAt\x12-\n" +
	"\n" +
	"updated_by\x18\x05 \x01(\v2\x0e.engine.LookupR\tupdatedBy\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12\x18\n" +
	"\aenabled\x18\a \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"mime_types\x18\b \x03(\tR\tmimeTypes\x12%\n" +
	"\x0espeed_download\x18\t \x01(\x03R\rspeedDownload\x12!\n" +
	"\fspeed_upload\x18\n" +
	" \x01(\x03R\vspeedUpload\x12 \n" +
	"\vdescription\x18\v \x01(\tR\vdescription\x126\n" +
	"\bchannels\x18\f \x03(\x0e2\x1a.storage.UploadFileChannelR\bchannels\x12%\n" +
	"\x0eretention_days\x18\r \x01(\x05R\rretentionDays\x12\x1a\n" +
	"\bposition\x18\x0e \x01(\x05R\bposition\x12&\n" +
	"\x0fmax_upload_size\x18\x0f \x01(\x03R\rmaxUploadSize\x12\x18\n" +
	"\aencrypt\x18\x10 \x01(\bR\aencrypt\"\xf3\x02\n" +
	"\x17CreateFilePolicyRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"mime_types\x18\x03 \x03(\tR\tmimeTypes\x12%\n" +
	"\x0espeed_download\x18\x04 \x01(\x03R\rspeedDownload\x12!\n" +
	"\fspeed_upload\x18\x05 \x01(\x03R\vspeedUpload\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x126\n" +
	"\bchannels\x18\a \x03(\x0e2\x1a.storage.UploadFileChannelR\bchannels\x12%\n" +
	"\x0eretention_days\x18\b \x01(\x05R\rretentionDays\x12&\n" +
	"\x0fmax_upload_size\x18\t \x01(\x03R\rmaxUploadSize\x12\x18\n" +
	"\aencrypt\x18\n" +
	" \x01(\bR\aencrypt\"Q\n" +
	"\x10ListFilePolicies\x12\x12\n" +
	"\x04next\x18\x01 \x01(\bR\x04next\x12)\n" +
	"\x05items\x18\x02 \x03(\v2\x13.storage.FilePolicyR\x05items\"\x8d\x01\n" +
	"\x19SearchFilePoliciesRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\f\n" +
	"\x01q\x18\x03 \x01(\tR\x01q\x12\x12\n" +
	"\x04sort\x18\x04 \x01(\tR\x04sort\x12\x16\n" +
	"\x06fields\x18\x05 \x03(\tR\x06fields\x12\x0e\n" +
	"\x02id\x18\x06 \x03(\rR\x02id\"'\n" +
	"\x15ReadFilePolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"\x83\x03\n" +
	"\x17UpdateFilePolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"mime_types\x18\x04 \x03(\tR\tmimeTypes\x12%\n" +
	"\x0espeed_download\x18\x05 \x01(\x03R\rspeedDownload\x12!\n" +
	"\fspeed_upload\x18\x06 \x01(\x03R\vspeedUpload\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x126\n" +
	"\bchannels\x18\b \x03(\x0e2\x1a.storage.UploadFileChannelR\bchannels\x12%\n" +
	"\x0eretention_days\x18\t \x01(\x05R\rretentionDays\x12&\n" +
	"\x0fmax_upload_size\x18\n" +
	" \x01(\x03R\rmaxUploadSize\x12\x18\n" +
	"\aencrypt\x18\v \x01(\bR\aencrypt\"\x9a\x03\n" +
	"\x16PatchFilePolicyRequest\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\x12\x1d\n" +
	"\n" +
	"mime_types\x18\x05 \x03(\tR\tmimeTypes\x12%\n" +
	"\x0espeed_download\x18\x06 \x01(\x03R\rspeedDownload\x12!\n" +
	"\fspeed_upload\x18\a \x01(\x03R\vspeedUpload\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\x126\n" +
	"\bchannels\x18\t \x03(\x0e2\x1a.storage.UploadFileChannelR\bchannels\x12%\n" +
	"\x0eretention_days\x18\n" +
	" \x01(\x05R\rretentionDays\x12&\n" +
	"\x0fmax_upload_size\x18\v \x01(\x03R\rmaxUploadSize\x12\x18\n" +
	"\aencrypt\x18\f \x01(\bR\aencrypt\")\n" +
	"\x17DeleteFilePolicyRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"M\n" +
	"\x1dMovePositionFilePolicyRequest\x12\x17\n" +
	"\afrom_id\x18\x01 \x01(\x05R\x06fromId\x12\x13\n" +
	"\x05to_id\x18\x02 \x01(\x05R\x04toId\":\n" +
	"\x1eMovePositionFilePolicyResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xe1\a\n" +
	"\x13FilePoliciesService\x12l\n" +
	"\x10CreateFilePolicy\x12 .storage.CreateFilePolicyRequest\x1a\x13.storage.FilePolicy\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/storage/file_policies\x12s\n" +
	"\x12SearchFilePolicies\x12\".storage.SearchFilePoliciesRequest\x1a\x19.storage.ListFilePolicies\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/storage/file_policies\x12j\n" +
	"\x0eReadFilePolicy\x12\x1e.storage.ReadFilePolicyRequest\x1a\x13.storage.FilePolicy\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/storage/file_policies/{id}\x12q\n" +
	"\x10UpdateFilePolicy\x12 .storage.UpdateFilePolicyRequest\x1a\x13.storage.FilePolicy\"&\x82\xd3\xe4\x93\x02 :\x01*\x1a\x1b/storage/file_policies/{id}\x12o\n" +
	"\x0fPatchFilePolicy\x12\x1f.storage.PatchFilePolicyRequest\x1a\x13.storage.FilePolicy\"&\x82\xd3\xe4\x93\x02 :\x01*2\x1b/storage/file_policies/{id}\x12n\n" +
	"\x10DeleteFilePolicy\x12 .storage.DeleteFilePolicyRequest\x1a\x13.storage.FilePolicy\"#\x82\xd3\xe4\x93\x02\x1d*\x1b/storage/file_policies/{id}\x12\xa1\x01\n" +
	"\x16MovePositionFilePolicy\x12&.storage.MovePositionFilePolicyRequest\x1a'.storage.MovePositionFilePolicyResponse\"6\x82\xd3\xe4\x93\x020:\x01*2+/storage/file_policies/{from_id}/to/{to_id}\x12\x82\x01\n" +
	"\x0fFilePolicyApply\x12\x1f.storage.FilePolicyApplyRequest\x1a .storage.FilePolicyApplyResponse\",\x82\xd3\xe4\x93\x02&:\x01*2!/storage/file_policies/{id}/applyB\x7f\n" +
	"\vcom.storageB\x11FilePoliciesProtoP\x01Z!github.com/webitel/protos/storage\xa2\x02\x03SXX\xaa\x02\aStorage\xca\x02\aStorage\xe2\x02\x13Storage\\GPBMetadata\xea\x02\aStorageb\x06proto3"

var (
	file_file_policies_proto_rawDescOnce sync.Once
	file_file_policies_proto_rawDescData []byte
)

func file_file_policies_proto_rawDescGZIP() []byte {
	file_file_policies_proto_rawDescOnce.Do(func() {
		file_file_policies_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_file_policies_proto_rawDesc), len(file_file_policies_proto_rawDesc)))
	})
	return file_file_policies_proto_rawDescData
}

var file_file_policies_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_file_policies_proto_goTypes = []any{
	(*FilePolicyApplyRequest)(nil),         // 0: storage.FilePolicyApplyRequest
	(*FilePolicyApplyResponse)(nil),        // 1: storage.FilePolicyApplyResponse
	(*FilePolicy)(nil),                     // 2: storage.FilePolicy
	(*CreateFilePolicyRequest)(nil),        // 3: storage.CreateFilePolicyRequest
	(*ListFilePolicies)(nil),               // 4: storage.ListFilePolicies
	(*SearchFilePoliciesRequest)(nil),      // 5: storage.SearchFilePoliciesRequest
	(*ReadFilePolicyRequest)(nil),          // 6: storage.ReadFilePolicyRequest
	(*UpdateFilePolicyRequest)(nil),        // 7: storage.UpdateFilePolicyRequest
	(*PatchFilePolicyRequest)(nil),         // 8: storage.PatchFilePolicyRequest
	(*DeleteFilePolicyRequest)(nil),        // 9: storage.DeleteFilePolicyRequest
	(*MovePositionFilePolicyRequest)(nil),  // 10: storage.MovePositionFilePolicyRequest
	(*MovePositionFilePolicyResponse)(nil), // 11: storage.MovePositionFilePolicyResponse
	(*engine.Lookup)(nil),                  // 12: engine.Lookup
	(UploadFileChannel)(0),                 // 13: storage.UploadFileChannel
}
var file_file_policies_proto_depIdxs = []int32{
	12, // 0: storage.FilePolicy.created_by:type_name -> engine.Lookup
	12, // 1: storage.FilePolicy.updated_by:type_name -> engine.Lookup
	13, // 2: storage.FilePolicy.channels:type_name -> storage.UploadFileChannel
	13, // 3: storage.CreateFilePolicyRequest.channels:type_name -> storage.UploadFileChannel
	2,  // 4: storage.ListFilePolicies.items:type_name -> storage.FilePolicy
	13, // 5: storage.UpdateFilePolicyRequest.channels:type_name -> storage.UploadFileChannel
	13, // 6: storage.PatchFilePolicyRequest.channels:type_name -> storage.UploadFileChannel
	3,  // 7: storage.FilePoliciesService.CreateFilePolicy:input_type -> storage.CreateFilePolicyRequest
	5,  // 8: storage.FilePoliciesService.SearchFilePolicies:input_type -> storage.SearchFilePoliciesRequest
	6,  // 9: storage.FilePoliciesService.ReadFilePolicy:input_type -> storage.ReadFilePolicyRequest
	7,  // 10: storage.FilePoliciesService.UpdateFilePolicy:input_type -> storage.UpdateFilePolicyRequest
	8,  // 11: storage.FilePoliciesService.PatchFilePolicy:input_type -> storage.PatchFilePolicyRequest
	9,  // 12: storage.FilePoliciesService.DeleteFilePolicy:input_type -> storage.DeleteFilePolicyRequest
	10, // 13: storage.FilePoliciesService.MovePositionFilePolicy:input_type -> storage.MovePositionFilePolicyRequest
	0,  // 14: storage.FilePoliciesService.FilePolicyApply:input_type -> storage.FilePolicyApplyRequest
	2,  // 15: storage.FilePoliciesService.CreateFilePolicy:output_type -> storage.FilePolicy
	4,  // 16: storage.FilePoliciesService.SearchFilePolicies:output_type -> storage.ListFilePolicies
	2,  // 17: storage.FilePoliciesService.ReadFilePolicy:output_type -> storage.FilePolicy
	2,  // 18: storage.FilePoliciesService.UpdateFilePolicy:output_type -> storage.FilePolicy
	2,  // 19: storage.FilePoliciesService.PatchFilePolicy:output_type -> storage.FilePolicy
	2,  // 20: storage.FilePoliciesService.DeleteFilePolicy:output_type -> storage.FilePolicy
	11, // 21: storage.FilePoliciesService.MovePositionFilePolicy:output_type -> storage.MovePositionFilePolicyResponse
	1,  // 22: storage.FilePoliciesService.FilePolicyApply:output_type -> storage.FilePolicyApplyResponse
	15, // [15:23] is the sub-list for method output_type
	7,  // [7:15] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_file_policies_proto_init() }
func file_file_policies_proto_init() {
	if File_file_policies_proto != nil {
		return
	}
	file_file_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_file_policies_proto_rawDesc), len(file_file_policies_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_file_policies_proto_goTypes,
		DependencyIndexes: file_file_policies_proto_depIdxs,
		MessageInfos:      file_file_policies_proto_msgTypes,
	}.Build()
	File_file_policies_proto = out.File
	file_file_policies_proto_goTypes = nil
	file_file_policies_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: media.proto

package storage

import (
	engine "github.com/webitel/logger/api/engine"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeleteMediaFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId      int64                  `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMediaFileRequest) Reset() {
	*x = DeleteMediaFileRequest{}
	mi := &file_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMediaFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMediaFileRequest) ProtoMessage() {}

func (x *DeleteMediaFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMediaFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteMediaFileRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteMediaFileRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteMediaFileRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type ReadMediaFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId      int64                  `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadMediaFileRequest) Reset() {
	*x = ReadMediaFileRequest{}
	mi := &file_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadMediaFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMediaFileRequest) ProtoMessage() {}

func (x *ReadMediaFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMediaFileRequest.ProtoReflect.Descriptor instead.
func (*ReadMediaFileRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{1}
}

func (x *ReadMediaFileRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadMediaFileRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

type MediaFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy     *engine.Lookup         `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy     *engine.Lookup         `protobuf:"bytes,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	MimeType      string                 `protobuf:"bytes,8,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaFile) Reset() {
	*x = MediaFile{}
	mi := &file_media_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaFile) ProtoMessage() {}

func (x *MediaFile) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaFile.ProtoReflect.Descriptor instead.
func (*MediaFile) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{2}
}

func (x *MediaFile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MediaFile) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MediaFile) GetCreatedBy() *engine.Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *MediaFile) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *MediaFile) GetUpdatedBy() *engine.Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *MediaFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MediaFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MediaFile) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

type SearchMediaFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q             string                 `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort          string                 `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields        []string               `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	Id            []uint32               `protobuf:"varint,6,rep,packed,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMediaFileRequest) Reset() {
	*x = SearchMediaFileRequest{}
	mi := &file_media_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMediaFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMediaFileRequest) ProtoMessage() {}

func (x *SearchMediaFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMediaFileRequest.ProtoReflect.Descriptor instead.
func (*SearchMediaFileRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{3}
}

func (x *SearchMediaFileRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchMediaFileRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchMediaFileRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *SearchMediaFileRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *SearchMediaFileRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *SearchMediaFileRequest) GetId() []uint32 {
	if x != nil {
		return x.Id
	}
	return nil
}

type ListMedia struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Next          bool                   `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items         []*MediaFile           `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMedia) Reset() {
	*x = ListMedia{}
	mi := &file_media_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMedia) ProtoMessage() {}

func (x *ListMedia) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMedia.ProtoReflect.Descriptor instead.
func (*ListMedia) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{4}
}

func (x *ListMedia) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *ListMedia) GetItems() []*MediaFile {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_media_proto protoreflect.FileDescriptor

const file_media_proto_rawDesc = "" +
	"\n" +
	"\vmedia.proto\x12\astorage\x1a\vconst.proto\x1a\x1cgoogle/api/annotations.proto\"E\n" +
	"\x16DeleteMediaFileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\tdomain_id\x18\x02 \x01(\x03R\bdomainId\"C\n" +
	"\x14ReadMediaFileRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1b\n" +
	"\tdomain_id\x18\x02 \x01(\x03R\bdomainId\"\xfc\x01\n" +
	"\tMediaFile\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"created_at\x18\x02 \x01(\x03R\tcreatedAt\x12-\n" +
	"\n" +
	"created_by\x18\x03 \x01(\v2\x0e.engine.LookupR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\x03R\tupdatedAt\x12-\n" +
	"\n" +
	"updated_by\x18\x05 \x01(\v2\x0e.engine.LookupR\tupdatedBy\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\a \x01(\x03R\x04size\x12\x1b\n" +
	"\tmime_type\x18\b \x01(\tR\bmimeType\"\x8a\x01\n" +
	"\x16SearchMediaFileRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\f\n" +
	"\x01q\x18\x03 \x01(\tR\x01q\x12\x12\n" +
	"\x04sort\x18\x04 \x01(\tR\x04sort\x12\x16\n" +
	"\x06fields\x18\x05 \x03(\tR\x06fields\x12\x0e\n" +
	"\x02id\x18\x06 \x03(\rR\x02id\"I\n" +
	"\tListMedia\x12\x12\n" +
	"\x04next\x18\x01 \x01(\bR\x04next\x12(\n" +
	"\x05items\x18\x02 \x03(\v2\x12.storage.MediaFileR\x05items2\x80\x03\n" +
	"\x10MediaFileService\x12^\n" +
	"\x0fSearchMediaFile\x12\x1f.storage.SearchMediaFileRequest\x1a\x12.storage.ListMedia\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/storage/media\x12_\n" +
	"\rReadMediaFile\x12\x1d.storage.ReadMediaFileRequest\x1a\x12.storage.MediaFile\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/storage/media/{id}\x12c\n" +
	"\x0fDeleteMediaFile\x12\x1f.storage.DeleteMediaFileRequest\x1a\x12.storage.MediaFile\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/storage/media/{id}\x12F\n" +
	"\x0fReadMediaFileNA\x12\x1d.storage.ReadMediaFileRequest\x1a\x12.storage.MediaFile\"\x00Bx\n" +
	"\vcom.storageB\n" +
	"MediaProtoP\x01Z!github.com/webitel/protos/storage\xa2\x02\x03SXX\xaa\x02\aStorage\xca\x02\aStorage\xe2\x02\x13Storage\\GPBMetadata\xea\x02\aStorageb\x06proto3"

var (
	file_media_proto_rawDescOnce sync.Once
	file_media_proto_rawDescData []byte
)

func file_media_proto_rawDescGZIP() []byte {
	file_media_proto_rawDescOnce.Do(func() {
		file_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_media_proto_rawDesc), len(file_media_proto_rawDesc)))
	})
	return file_media_proto_rawDescData
}

var file_media_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_media_proto_goTypes = []any{
	(*DeleteMediaFileRequest)(nil), // 0: storage.DeleteMediaFileRequest
	(*ReadMediaFileRequest)(nil),   // 1: storage.ReadMediaFileRequest
	(*MediaFile)(nil),              // 2: storage.MediaFile
	(*SearchMediaFileRequest)(nil), // 3: storage.SearchMediaFileRequest
	(*ListMedia)(nil),              // 4: storage.ListMedia
	(*engine.Lookup)(nil),          // 5: engine.Lookup
}
var file_media_proto_depIdxs = []int32{
	5, // 0: storage.MediaFile.created_by:type_name -> engine.Lookup
	5, // 1: storage.MediaFile.updated_by:type_name -> engine.Lookup
	2, // 2: storage.ListMedia.items:type_name -> storage.MediaFile
	3, // 3: storage.MediaFileService.SearchMediaFile:input_type -> storage.SearchMediaFileRequest
	1, // 4: storage.MediaFileService.ReadMediaFile:input_type -> storage.ReadMediaFileRequest
	0, // 5: storage.MediaFileService.DeleteMediaFile:input_type -> storage.DeleteMediaFileRequest
	1, // 6: storage.MediaFileService.ReadMediaFileNA:input_type -> storage.ReadMediaFileRequest
	4, // 7: storage.MediaFileService.SearchMediaFile:output_type -> storage.ListMedia
	2, // 8: storage.MediaFileService.ReadMediaFile:output_type -> storage.MediaFile
	2, // 9: storage.MediaFileService.DeleteMediaFile:output_type -> storage.MediaFile
	2, // 10: storage.MediaFileService.ReadMediaFileNA:output_type -> storage.MediaFile
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_media_proto_init() }
func file_media_proto_init() {
	if File_media_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_media_proto_rawDesc), len(file_media_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_proto_goTypes,
		DependencyIndexes: file_media_proto_depIdxs,
		MessageInfos:      file_media_proto_msgTypes,
	}.Build()
	File_media_proto = out.File
	file_media_proto_goTypes = nil
	file_media_proto_depIdxs = nil
}

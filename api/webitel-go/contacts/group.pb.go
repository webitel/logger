// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: contacts/group.proto

package contacts

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for Group Type
type GroupType int32

const (
	GroupType_GROUP_TYPE_UNSPECIFIED GroupType = 0 // Default value
	GroupType_STATIC                 GroupType = 1 // Static group
	GroupType_DYNAMIC                GroupType = 2 // Dynamic group
)

// Enum value maps for GroupType.
var (
	GroupType_name = map[int32]string{
		0: "GROUP_TYPE_UNSPECIFIED",
		1: "STATIC",
		2: "DYNAMIC",
	}
	GroupType_value = map[string]int32{
		"GROUP_TYPE_UNSPECIFIED": 0,
		"STATIC":                 1,
		"DYNAMIC":                2,
	}
)

func (x GroupType) Enum() *GroupType {
	p := new(GroupType)
	*p = x
	return p
}

func (x GroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_contacts_group_proto_enumTypes[0].Descriptor()
}

func (GroupType) Type() protoreflect.EnumType {
	return &file_contacts_group_proto_enumTypes[0]
}

func (x GroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupType.Descriptor instead.
func (GroupType) EnumDescriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{0}
}

// Group of Contacts
type Group struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the group. Never changes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the group.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the group.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Timestamp(milli) of the group's creation.
	CreatedAt int64 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp(milli) of the last group update.
	UpdatedAt int64 `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// The user who created this group.
	CreatedBy *Lookup `protobuf:"bytes,7,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// The user who performed the last update.
	UpdatedBy *Lookup `protobuf:"bytes,8,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Enabled   bool    `protobuf:"varint,9,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// List of dynamic conditions associated with the group.
	Conditions []*DynamicCondition `protobuf:"bytes,10,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// Default static group to be assigned if no conditions are met.
	DefaultGroup  *Lookup                `protobuf:"bytes,11,opt,name=default_group,json=defaultGroup,proto3" json:"default_group,omitempty"`
	Type          GroupType              `protobuf:"varint,12,opt,name=type,proto3,enum=webitel.contacts.GroupType" json:"type,omitempty"`
	ContactsSize  *wrapperspb.Int64Value `protobuf:"bytes,20,opt,name=contacts_size,json=contactsSize,proto3" json:"contacts_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_contacts_group_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{0}
}

func (x *Group) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Group) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Group) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Group) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Group) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *Group) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Group) GetConditions() []*DynamicCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *Group) GetDefaultGroup() *Lookup {
	if x != nil {
		return x.DefaultGroup
	}
	return nil
}

func (x *Group) GetType() GroupType {
	if x != nil {
		return x.Type
	}
	return GroupType_GROUP_TYPE_UNSPECIFIED
}

func (x *Group) GetContactsSize() *wrapperspb.Int64Value {
	if x != nil {
		return x.ContactsSize
	}
	return nil
}

// A list of Groups.
type GroupList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of the partial result.
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Have more records.
	Next bool `protobuf:"varint,2,opt,name=next,proto3" json:"next,omitempty"`
	// List of groups.
	Items         []*Group `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupList) Reset() {
	*x = GroupList{}
	mi := &file_contacts_group_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupList) ProtoMessage() {}

func (x *GroupList) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupList.ProtoReflect.Descriptor instead.
func (*GroupList) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{1}
}

func (x *GroupList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GroupList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

func (x *GroupList) GetItems() []*Group {
	if x != nil {
		return x.Items
	}
	return nil
}

// Request message for creating a new group.
type CreateGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the group.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The description of the group.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The enabled status of the group.
	Enabled       bool `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_contacts_group_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateGroupRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Input message for creating/updating a group
type InputGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The new name of the group.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The new description of the group.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The new enabled status of the group.
	Enabled       bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputGroup) Reset() {
	*x = InputGroup{}
	mi := &file_contacts_group_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputGroup) ProtoMessage() {}

func (x *InputGroup) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputGroup.ProtoReflect.Descriptor instead.
func (*InputGroup) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{3}
}

func (x *InputGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InputGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *InputGroup) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Request message for updating an existing group.
type UpdateGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the group to update.
	Id    string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Input *InputGroup `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	// ---- JSON PATCH fields mask ----
	// List of JPath fields specified in body(input).
	XJsonMask     []string `protobuf:"bytes,3,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupRequest) Reset() {
	*x = UpdateGroupRequest{}
	mi := &file_contacts_group_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRequest) ProtoMessage() {}

func (x *UpdateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGroupRequest) GetInput() *InputGroup {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *UpdateGroupRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

// Request message for deleting a group.
type DeleteGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the group to delete.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	mi := &file_contacts_group_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request message for adding contacts to a group.
type AddContactsToGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the group.
	GroupIds []int64 `protobuf:"varint,1,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// List of contact IDs to add to the group.
	ContactIds    []int64 `protobuf:"varint,2,rep,packed,name=contact_ids,json=contactIds,proto3" json:"contact_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddContactsToGroupRequest) Reset() {
	*x = AddContactsToGroupRequest{}
	mi := &file_contacts_group_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContactsToGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContactsToGroupRequest) ProtoMessage() {}

func (x *AddContactsToGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContactsToGroupRequest.ProtoReflect.Descriptor instead.
func (*AddContactsToGroupRequest) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{6}
}

func (x *AddContactsToGroupRequest) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *AddContactsToGroupRequest) GetContactIds() []int64 {
	if x != nil {
		return x.ContactIds
	}
	return nil
}

// Request message for removing contacts from a group.
type RemoveContactsFromGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the group.
	GroupId int64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// List of contact IDs to remove from the group.
	ContactIds    []int64 `protobuf:"varint,2,rep,packed,name=contact_ids,json=contactIds,proto3" json:"contact_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveContactsFromGroupRequest) Reset() {
	*x = RemoveContactsFromGroupRequest{}
	mi := &file_contacts_group_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveContactsFromGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContactsFromGroupRequest) ProtoMessage() {}

func (x *RemoveContactsFromGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContactsFromGroupRequest.ProtoReflect.Descriptor instead.
func (*RemoveContactsFromGroupRequest) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveContactsFromGroupRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *RemoveContactsFromGroupRequest) GetContactIds() []int64 {
	if x != nil {
		return x.ContactIds
	}
	return nil
}

// Request message for listing groups.
type ListGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of result dataset records. offset = (page*size)
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Size count of records on result page. limit = (size++)
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	// Sort the result according to fields.
	Sort []string `protobuf:"bytes,4,rep,name=sort,proto3" json:"sort,omitempty"`
	// Filter by unique IDs.
	Id []string `protobuf:"bytes,5,rep,name=id,proto3" json:"id,omitempty"`
	// Search term: group name;
	// `?` - matches any one character
	// `*` - matches 0 or more characters
	Q string `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	// Filter by group name.
	Name string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	// Filter by group type.
	Type GroupType `protobuf:"varint,8,opt,name=type,proto3,enum=webitel.contacts.GroupType" json:"type,omitempty"`
	// Filter by only enabled group
	Enabled       bool `protobuf:"varint,9,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupsRequest) Reset() {
	*x = ListGroupsRequest{}
	mi := &file_contacts_group_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsRequest) ProtoMessage() {}

func (x *ListGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{8}
}

func (x *ListGroupsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListGroupsRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListGroupsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListGroupsRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListGroupsRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ListGroupsRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ListGroupsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListGroupsRequest) GetType() GroupType {
	if x != nil {
		return x.Type
	}
	return GroupType_GROUP_TYPE_UNSPECIFIED
}

func (x *ListGroupsRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// Request message for locating a group by ID.
type LocateGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the group to locate.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Fields to be retrieved into result.
	Fields        []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateGroupRequest) Reset() {
	*x = LocateGroupRequest{}
	mi := &file_contacts_group_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateGroupRequest) ProtoMessage() {}

func (x *LocateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateGroupRequest.ProtoReflect.Descriptor instead.
func (*LocateGroupRequest) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{9}
}

func (x *LocateGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LocateGroupRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

// Response message for locating a group.
type LocateGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The located group.
	Group         *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateGroupResponse) Reset() {
	*x = LocateGroupResponse{}
	mi := &file_contacts_group_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateGroupResponse) ProtoMessage() {}

func (x *LocateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_group_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateGroupResponse.ProtoReflect.Descriptor instead.
func (*LocateGroupResponse) Descriptor() ([]byte, []int) {
	return file_contacts_group_proto_rawDescGZIP(), []int{10}
}

func (x *LocateGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

var File_contacts_group_proto protoreflect.FileDescriptor

const file_contacts_group_proto_rawDesc = "" +
	"\n" +
	"\x14contacts/group.proto\x12\x10webitel.contacts\x1a\x15contacts/fields.proto\x1a\x1ccontacts/dynamic_group.proto\x1a\x17contacts/contacts.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x8d\x04\n" +
	"\x05Group\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\x03R\tupdatedAt\x127\n" +
	"\n" +
	"created_by\x18\a \x01(\v2\x18.webitel.contacts.LookupR\tcreatedBy\x127\n" +
	"\n" +
	"updated_by\x18\b \x01(\v2\x18.webitel.contacts.LookupR\tupdatedBy\x12\x18\n" +
	"\aenabled\x18\t \x01(\bR\aenabled\x12B\n" +
	"\n" +
	"conditions\x18\n" +
	" \x03(\v2\".webitel.contacts.DynamicConditionR\n" +
	"conditions\x12=\n" +
	"\rdefault_group\x18\v \x01(\v2\x18.webitel.contacts.LookupR\fdefaultGroup\x12/\n" +
	"\x04type\x18\f \x01(\x0e2\x1b.webitel.contacts.GroupTypeR\x04type\x12@\n" +
	"\rcontacts_size\x18\x14 \x01(\v2\x1b.google.protobuf.Int64ValueR\fcontactsSize\"b\n" +
	"\tGroupList\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x02 \x01(\bR\x04next\x12-\n" +
	"\x05items\x18\x03 \x03(\v2\x17.webitel.contacts.GroupR\x05items\"r\n" +
	"\x12CreateGroupRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled:\f\x92A\t\n" +
	"\a\xd2\x01\x04name\"\\\n" +
	"\n" +
	"InputGroup\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\"\x9f\x01\n" +
	"\x12UpdateGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\x05input\x18\x02 \x01(\v2\x1c.webitel.contacts.InputGroupR\x05input\x129\n" +
	"\vx_json_mask\x18\x03 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask:\n" +
	"\x92A\a\n" +
	"\x05\xd2\x01\x02id\"0\n" +
	"\x12DeleteGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id:\n" +
	"\x92A\a\n" +
	"\x05\xd2\x01\x02id\"Y\n" +
	"\x19AddContactsToGroupRequest\x12\x1b\n" +
	"\tgroup_ids\x18\x01 \x03(\x03R\bgroupIds\x12\x1f\n" +
	"\vcontact_ids\x18\x02 \x03(\x03R\n" +
	"contactIds\"\\\n" +
	"\x1eRemoveContactsFromGroupRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\x03R\agroupId\x12\x1f\n" +
	"\vcontact_ids\x18\x02 \x03(\x03R\n" +
	"contactIds\"\xe4\x01\n" +
	"\x11ListGroupsRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x05R\x04size\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x12\x12\n" +
	"\x04sort\x18\x04 \x03(\tR\x04sort\x12\x0e\n" +
	"\x02id\x18\x05 \x03(\tR\x02id\x12\f\n" +
	"\x01q\x18\x06 \x01(\tR\x01q\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12/\n" +
	"\x04type\x18\b \x01(\x0e2\x1b.webitel.contacts.GroupTypeR\x04type\x12\x18\n" +
	"\aenabled\x18\t \x01(\bR\aenabled\"<\n" +
	"\x12LocateGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\"D\n" +
	"\x13LocateGroupResponse\x12-\n" +
	"\x05group\x18\x01 \x01(\v2\x17.webitel.contacts.GroupR\x05group*@\n" +
	"\tGroupType\x12\x1a\n" +
	"\x16GROUP_TYPE_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06STATIC\x10\x01\x12\v\n" +
	"\aDYNAMIC\x10\x022\xdf\b\n" +
	"\x06Groups\x12\x97\x01\n" +
	"\n" +
	"ListGroups\x12#.webitel.contacts.ListGroupsRequest\x1a\x1b.webitel.contacts.GroupList\"G\x92A,\x12*Retrieve a list of groups or search groups\x82\xd3\xe4\x93\x02\x12\x12\x10/contacts/groups\x12\x80\x01\n" +
	"\vCreateGroup\x12$.webitel.contacts.CreateGroupRequest\x1a\x17.webitel.contacts.Group\"2\x92A\x14\x12\x12Create a new group\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/contacts/groups\x12\xaf\x01\n" +
	"\vUpdateGroup\x12$.webitel.contacts.UpdateGroupRequest\x1a\x17.webitel.contacts.Group\"a\x92A\x1a\x12\x18Update an existing group\x82\xd3\xe4\x93\x02>:\x05inputZ\x1e:\x05input2\x15/contacts/groups/{id}\x1a\x15/contacts/groups/{id}\x12~\n" +
	"\vDeleteGroup\x12$.webitel.contacts.DeleteGroupRequest\x1a\x17.webitel.contacts.Group\"0\x92A\x10\x12\x0eDelete a group\x82\xd3\xe4\x93\x02\x17*\x15/contacts/groups/{id}\x12\xb5\x01\n" +
	"\x13AddContactsToGroups\x12+.webitel.contacts.AddContactsToGroupRequest\x1a\x1d.webitel.contacts.ContactList\"R\x92A$\x12\"Attach contacts to multiple groups\x82\xd3\xe4\x93\x02%:\x01*\" /contacts/groups/contacts:attach\x12\xb8\x01\n" +
	"\x17RemoveContactsFromGroup\x120.webitel.contacts.RemoveContactsFromGroupRequest\x1a\x1d.webitel.contacts.ContactList\"L\x92A\x1e\x12\x1cRemove contacts from a group\x82\xd3\xe4\x93\x02%*#/contacts/groups/{group_id}/contact\x12\x92\x01\n" +
	"\vLocateGroup\x12$.webitel.contacts.LocateGroupRequest\x1a%.webitel.contacts.LocateGroupResponse\"6\x92A\x16\x12\x14Locate a group by ID\x82\xd3\xe4\x93\x02\x17\x12\x15/contacts/groups/{id}B\xa5\x01\n" +
	"\x14com.webitel.contactsB\n" +
	"GroupProtoP\x01Z webitel.go/api/contacts;contacts\xa2\x02\x03WCX\xaa\x02\x10Webitel.Contacts\xca\x02\x10Webitel\\Contacts\xe2\x02\x1cWebitel\\Contacts\\GPBMetadata\xea\x02\x11Webitel::Contactsb\x06proto3"

var (
	file_contacts_group_proto_rawDescOnce sync.Once
	file_contacts_group_proto_rawDescData []byte
)

func file_contacts_group_proto_rawDescGZIP() []byte {
	file_contacts_group_proto_rawDescOnce.Do(func() {
		file_contacts_group_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contacts_group_proto_rawDesc), len(file_contacts_group_proto_rawDesc)))
	})
	return file_contacts_group_proto_rawDescData
}

var file_contacts_group_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contacts_group_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_contacts_group_proto_goTypes = []any{
	(GroupType)(0),                         // 0: webitel.contacts.GroupType
	(*Group)(nil),                          // 1: webitel.contacts.Group
	(*GroupList)(nil),                      // 2: webitel.contacts.GroupList
	(*CreateGroupRequest)(nil),             // 3: webitel.contacts.CreateGroupRequest
	(*InputGroup)(nil),                     // 4: webitel.contacts.InputGroup
	(*UpdateGroupRequest)(nil),             // 5: webitel.contacts.UpdateGroupRequest
	(*DeleteGroupRequest)(nil),             // 6: webitel.contacts.DeleteGroupRequest
	(*AddContactsToGroupRequest)(nil),      // 7: webitel.contacts.AddContactsToGroupRequest
	(*RemoveContactsFromGroupRequest)(nil), // 8: webitel.contacts.RemoveContactsFromGroupRequest
	(*ListGroupsRequest)(nil),              // 9: webitel.contacts.ListGroupsRequest
	(*LocateGroupRequest)(nil),             // 10: webitel.contacts.LocateGroupRequest
	(*LocateGroupResponse)(nil),            // 11: webitel.contacts.LocateGroupResponse
	(*Lookup)(nil),                         // 12: webitel.contacts.Lookup
	(*DynamicCondition)(nil),               // 13: webitel.contacts.DynamicCondition
	(*wrapperspb.Int64Value)(nil),          // 14: google.protobuf.Int64Value
	(*ContactList)(nil),                    // 15: webitel.contacts.ContactList
}
var file_contacts_group_proto_depIdxs = []int32{
	12, // 0: webitel.contacts.Group.created_by:type_name -> webitel.contacts.Lookup
	12, // 1: webitel.contacts.Group.updated_by:type_name -> webitel.contacts.Lookup
	13, // 2: webitel.contacts.Group.conditions:type_name -> webitel.contacts.DynamicCondition
	12, // 3: webitel.contacts.Group.default_group:type_name -> webitel.contacts.Lookup
	0,  // 4: webitel.contacts.Group.type:type_name -> webitel.contacts.GroupType
	14, // 5: webitel.contacts.Group.contacts_size:type_name -> google.protobuf.Int64Value
	1,  // 6: webitel.contacts.GroupList.items:type_name -> webitel.contacts.Group
	4,  // 7: webitel.contacts.UpdateGroupRequest.input:type_name -> webitel.contacts.InputGroup
	0,  // 8: webitel.contacts.ListGroupsRequest.type:type_name -> webitel.contacts.GroupType
	1,  // 9: webitel.contacts.LocateGroupResponse.group:type_name -> webitel.contacts.Group
	9,  // 10: webitel.contacts.Groups.ListGroups:input_type -> webitel.contacts.ListGroupsRequest
	3,  // 11: webitel.contacts.Groups.CreateGroup:input_type -> webitel.contacts.CreateGroupRequest
	5,  // 12: webitel.contacts.Groups.UpdateGroup:input_type -> webitel.contacts.UpdateGroupRequest
	6,  // 13: webitel.contacts.Groups.DeleteGroup:input_type -> webitel.contacts.DeleteGroupRequest
	7,  // 14: webitel.contacts.Groups.AddContactsToGroups:input_type -> webitel.contacts.AddContactsToGroupRequest
	8,  // 15: webitel.contacts.Groups.RemoveContactsFromGroup:input_type -> webitel.contacts.RemoveContactsFromGroupRequest
	10, // 16: webitel.contacts.Groups.LocateGroup:input_type -> webitel.contacts.LocateGroupRequest
	2,  // 17: webitel.contacts.Groups.ListGroups:output_type -> webitel.contacts.GroupList
	1,  // 18: webitel.contacts.Groups.CreateGroup:output_type -> webitel.contacts.Group
	1,  // 19: webitel.contacts.Groups.UpdateGroup:output_type -> webitel.contacts.Group
	1,  // 20: webitel.contacts.Groups.DeleteGroup:output_type -> webitel.contacts.Group
	15, // 21: webitel.contacts.Groups.AddContactsToGroups:output_type -> webitel.contacts.ContactList
	15, // 22: webitel.contacts.Groups.RemoveContactsFromGroup:output_type -> webitel.contacts.ContactList
	11, // 23: webitel.contacts.Groups.LocateGroup:output_type -> webitel.contacts.LocateGroupResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_contacts_group_proto_init() }
func file_contacts_group_proto_init() {
	if File_contacts_group_proto != nil {
		return
	}
	file_contacts_fields_proto_init()
	file_contacts_dynamic_group_proto_init()
	file_contacts_contacts_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contacts_group_proto_rawDesc), len(file_contacts_group_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contacts_group_proto_goTypes,
		DependencyIndexes: file_contacts_group_proto_depIdxs,
		EnumInfos:         file_contacts_group_proto_enumTypes,
		MessageInfos:      file_contacts_group_proto_msgTypes,
	}.Build()
	File_contacts_group_proto = out.File
	file_contacts_group_proto_goTypes = nil
	file_contacts_group_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: contacts/timeline.proto

package contacts

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimelineEventType int32

const (
	TimelineEventType_chat  TimelineEventType = 0
	TimelineEventType_call  TimelineEventType = 1
	TimelineEventType_email TimelineEventType = 2
)

// Enum value maps for TimelineEventType.
var (
	TimelineEventType_name = map[int32]string{
		0: "chat",
		1: "call",
		2: "email",
	}
	TimelineEventType_value = map[string]int32{
		"chat":  0,
		"call":  1,
		"email": 2,
	}
)

func (x TimelineEventType) Enum() *TimelineEventType {
	p := new(TimelineEventType)
	*p = x
	return p
}

func (x TimelineEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimelineEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_contacts_timeline_proto_enumTypes[0].Descriptor()
}

func (TimelineEventType) Type() protoreflect.EnumType {
	return &file_contacts_timeline_proto_enumTypes[0]
}

func (x TimelineEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimelineEventType.Descriptor instead.
func (TimelineEventType) EnumDescriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{0}
}

type GetTimelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q             string                 `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort          string                 `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields        []string               `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	Ids           []string               `protobuf:"bytes,6,rep,name=ids,proto3" json:"ids,omitempty"`
	ContactId     string                 `protobuf:"bytes,7,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	DateFrom      int64                  `protobuf:"varint,8,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo        int64                  `protobuf:"varint,9,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	Type          []TimelineEventType    `protobuf:"varint,10,rep,packed,name=type,proto3,enum=webitel.contacts.TimelineEventType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimelineRequest) Reset() {
	*x = GetTimelineRequest{}
	mi := &file_contacts_timeline_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest) ProtoMessage() {}

func (x *GetTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{0}
}

func (x *GetTimelineRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTimelineRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetTimelineRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *GetTimelineRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetTimelineRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetTimelineRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetTimelineRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *GetTimelineRequest) GetDateFrom() int64 {
	if x != nil {
		return x.DateFrom
	}
	return 0
}

func (x *GetTimelineRequest) GetDateTo() int64 {
	if x != nil {
		return x.DateTo
	}
	return 0
}

func (x *GetTimelineRequest) GetType() []TimelineEventType {
	if x != nil {
		return x.Type
	}
	return nil
}

type GetTimelineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Days          []*DayTimeline         `protobuf:"bytes,2,rep,name=days,proto3" json:"days,omitempty"`
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Next          bool                   `protobuf:"varint,4,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimelineResponse) Reset() {
	*x = GetTimelineResponse{}
	mi := &file_contacts_timeline_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineResponse) ProtoMessage() {}

func (x *GetTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetTimelineResponse) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{1}
}

func (x *GetTimelineResponse) GetDays() []*DayTimeline {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *GetTimelineResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTimelineResponse) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type GetTimelineCounterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContactId     string                 `protobuf:"bytes,1,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimelineCounterRequest) Reset() {
	*x = GetTimelineCounterRequest{}
	mi := &file_contacts_timeline_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineCounterRequest) ProtoMessage() {}

func (x *GetTimelineCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineCounterRequest.ProtoReflect.Descriptor instead.
func (*GetTimelineCounterRequest) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{2}
}

func (x *GetTimelineCounterRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

type GetTimelineCounterResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// filter dates
	DateFrom int64 `protobuf:"varint,1,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo   int64 `protobuf:"varint,2,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	// defined event types
	ChatsCount    int64 `protobuf:"varint,3,opt,name=chats_count,json=chatsCount,proto3" json:"chats_count,omitempty"`
	CallsCount    int64 `protobuf:"varint,4,opt,name=calls_count,json=callsCount,proto3" json:"calls_count,omitempty"`
	EmailsCount   int64 `protobuf:"varint,5,opt,name=emails_count,json=emailsCount,proto3" json:"emails_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTimelineCounterResponse) Reset() {
	*x = GetTimelineCounterResponse{}
	mi := &file_contacts_timeline_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimelineCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineCounterResponse) ProtoMessage() {}

func (x *GetTimelineCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineCounterResponse.ProtoReflect.Descriptor instead.
func (*GetTimelineCounterResponse) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{3}
}

func (x *GetTimelineCounterResponse) GetDateFrom() int64 {
	if x != nil {
		return x.DateFrom
	}
	return 0
}

func (x *GetTimelineCounterResponse) GetDateTo() int64 {
	if x != nil {
		return x.DateTo
	}
	return 0
}

func (x *GetTimelineCounterResponse) GetChatsCount() int64 {
	if x != nil {
		return x.ChatsCount
	}
	return 0
}

func (x *GetTimelineCounterResponse) GetCallsCount() int64 {
	if x != nil {
		return x.CallsCount
	}
	return 0
}

func (x *GetTimelineCounterResponse) GetEmailsCount() int64 {
	if x != nil {
		return x.EmailsCount
	}
	return 0
}

type CallEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClosedAt      int64                  `protobuf:"varint,3,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	Duration      int64                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	IsInbound     bool                   `protobuf:"varint,6,opt,name=is_inbound,json=isInbound,proto3" json:"is_inbound,omitempty"`
	IsMissed      bool                   `protobuf:"varint,7,opt,name=is_missed,json=isMissed,proto3" json:"is_missed,omitempty"`
	Participants  []*Lookup              `protobuf:"bytes,9,rep,name=participants,proto3" json:"participants,omitempty"`
	Gateway       *Lookup                `protobuf:"bytes,10,opt,name=gateway,proto3" json:"gateway,omitempty"`
	FlowScheme    *Lookup                `protobuf:"bytes,11,opt,name=flow_scheme,json=flowScheme,proto3" json:"flow_scheme,omitempty"`
	Queue         *Lookup                `protobuf:"bytes,12,opt,name=queue,proto3" json:"queue,omitempty"`
	IsDetailed    bool                   `protobuf:"varint,13,opt,name=is_detailed,json=isDetailed,proto3" json:"is_detailed,omitempty"`
	Files         []*CallFile            `protobuf:"bytes,14,rep,name=files,proto3" json:"files,omitempty"`
	Transcripts   []*TranscriptLookup    `protobuf:"bytes,15,rep,name=transcripts,proto3" json:"transcripts,omitempty"`
	TotalDuration int64                  `protobuf:"varint,16,opt,name=total_duration,json=totalDuration,proto3" json:"total_duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallEvent) Reset() {
	*x = CallEvent{}
	mi := &file_contacts_timeline_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallEvent) ProtoMessage() {}

func (x *CallEvent) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallEvent.ProtoReflect.Descriptor instead.
func (*CallEvent) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{4}
}

func (x *CallEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CallEvent) GetClosedAt() int64 {
	if x != nil {
		return x.ClosedAt
	}
	return 0
}

func (x *CallEvent) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CallEvent) GetIsInbound() bool {
	if x != nil {
		return x.IsInbound
	}
	return false
}

func (x *CallEvent) GetIsMissed() bool {
	if x != nil {
		return x.IsMissed
	}
	return false
}

func (x *CallEvent) GetParticipants() []*Lookup {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *CallEvent) GetGateway() *Lookup {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *CallEvent) GetFlowScheme() *Lookup {
	if x != nil {
		return x.FlowScheme
	}
	return nil
}

func (x *CallEvent) GetQueue() *Lookup {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *CallEvent) GetIsDetailed() bool {
	if x != nil {
		return x.IsDetailed
	}
	return false
}

func (x *CallEvent) GetFiles() []*CallFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *CallEvent) GetTranscripts() []*TranscriptLookup {
	if x != nil {
		return x.Transcripts
	}
	return nil
}

func (x *CallEvent) GetTotalDuration() int64 {
	if x != nil {
		return x.TotalDuration
	}
	return 0
}

type ChatEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClosedAt      int64                  `protobuf:"varint,3,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	Duration      int64                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	IsInbound     bool                   `protobuf:"varint,6,opt,name=is_inbound,json=isInbound,proto3" json:"is_inbound,omitempty"`
	IsMissed      bool                   `protobuf:"varint,7,opt,name=is_missed,json=isMissed,proto3" json:"is_missed,omitempty"`
	Participants  []*Lookup              `protobuf:"bytes,9,rep,name=participants,proto3" json:"participants,omitempty"`
	Gateway       *Lookup                `protobuf:"bytes,10,opt,name=gateway,proto3" json:"gateway,omitempty"`
	FlowScheme    *Lookup                `protobuf:"bytes,11,opt,name=flow_scheme,json=flowScheme,proto3" json:"flow_scheme,omitempty"`
	Queue         *Lookup                `protobuf:"bytes,12,opt,name=queue,proto3" json:"queue,omitempty"`
	IsDetailed    bool                   `protobuf:"varint,13,opt,name=is_detailed,json=isDetailed,proto3" json:"is_detailed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatEvent) Reset() {
	*x = ChatEvent{}
	mi := &file_contacts_timeline_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent) ProtoMessage() {}

func (x *ChatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent.ProtoReflect.Descriptor instead.
func (*ChatEvent) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{5}
}

func (x *ChatEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatEvent) GetClosedAt() int64 {
	if x != nil {
		return x.ClosedAt
	}
	return 0
}

func (x *ChatEvent) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ChatEvent) GetIsInbound() bool {
	if x != nil {
		return x.IsInbound
	}
	return false
}

func (x *ChatEvent) GetIsMissed() bool {
	if x != nil {
		return x.IsMissed
	}
	return false
}

func (x *ChatEvent) GetParticipants() []*Lookup {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *ChatEvent) GetGateway() *Lookup {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *ChatEvent) GetFlowScheme() *Lookup {
	if x != nil {
		return x.FlowScheme
	}
	return nil
}

func (x *ChatEvent) GetQueue() *Lookup {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *ChatEvent) GetIsDetailed() bool {
	if x != nil {
		return x.IsDetailed
	}
	return false
}

type EmailEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From          []string               `protobuf:"bytes,3,rep,name=from,proto3" json:"from,omitempty"`                             // array of senders (email addresses)
	To            []string               `protobuf:"bytes,4,rep,name=to,proto3" json:"to,omitempty"`                                 // array of receivers (email addresses)
	Sender        []string               `protobuf:"bytes,5,rep,name=sender,proto3" json:"sender,omitempty"`                         // array of receivers (email addresses)
	Cc            []string               `protobuf:"bytes,6,rep,name=cc,proto3" json:"cc,omitempty"`                                 // array of ccs (email addresses)
	IsInbound     bool                   `protobuf:"varint,7,opt,name=is_inbound,json=isInbound,proto3" json:"is_inbound,omitempty"` // inbound/outbound email
	Subject       string                 `protobuf:"bytes,8,opt,name=subject,proto3" json:"subject,omitempty"`                       //
	Body          string                 `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`                             // plain text of email
	Html          string                 `protobuf:"bytes,10,opt,name=html,proto3" json:"html,omitempty"`                            // html body of email
	Owner         *Lookup                `protobuf:"bytes,11,opt,name=owner,proto3" json:"owner,omitempty"`                          // Agent who sent/accepted
	Attachments   []*Attachment          `protobuf:"bytes,12,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Profile       *Lookup                `protobuf:"bytes,13,opt,name=profile,proto3" json:"profile,omitempty"`                          // email profile
	IsDetailed    bool                   `protobuf:"varint,14,opt,name=is_detailed,json=isDetailed,proto3" json:"is_detailed,omitempty"` // reserved for the open
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmailEvent) Reset() {
	*x = EmailEvent{}
	mi := &file_contacts_timeline_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailEvent) ProtoMessage() {}

func (x *EmailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailEvent.ProtoReflect.Descriptor instead.
func (*EmailEvent) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{6}
}

func (x *EmailEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailEvent) GetFrom() []string {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *EmailEvent) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *EmailEvent) GetSender() []string {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *EmailEvent) GetCc() []string {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *EmailEvent) GetIsInbound() bool {
	if x != nil {
		return x.IsInbound
	}
	return false
}

func (x *EmailEvent) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailEvent) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *EmailEvent) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *EmailEvent) GetOwner() *Lookup {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *EmailEvent) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *EmailEvent) GetProfile() *Lookup {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *EmailEvent) GetIsDetailed() bool {
	if x != nil {
		return x.IsDetailed
	}
	return false
}

type DayTimeline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*Event               `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	DayTimestamp  int64                  `protobuf:"varint,2,opt,name=day_timestamp,json=dayTimestamp,proto3" json:"day_timestamp,omitempty"`
	ChatsCount    int64                  `protobuf:"varint,3,opt,name=chats_count,json=chatsCount,proto3" json:"chats_count,omitempty"`
	CallsCount    int64                  `protobuf:"varint,4,opt,name=calls_count,json=callsCount,proto3" json:"calls_count,omitempty"`
	EmailsCount   int64                  `protobuf:"varint,5,opt,name=emails_count,json=emailsCount,proto3" json:"emails_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DayTimeline) Reset() {
	*x = DayTimeline{}
	mi := &file_contacts_timeline_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DayTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayTimeline) ProtoMessage() {}

func (x *DayTimeline) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayTimeline.ProtoReflect.Descriptor instead.
func (*DayTimeline) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{7}
}

func (x *DayTimeline) GetItems() []*Event {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DayTimeline) GetDayTimestamp() int64 {
	if x != nil {
		return x.DayTimestamp
	}
	return 0
}

func (x *DayTimeline) GetChatsCount() int64 {
	if x != nil {
		return x.ChatsCount
	}
	return 0
}

func (x *DayTimeline) GetCallsCount() int64 {
	if x != nil {
		return x.CallsCount
	}
	return 0
}

func (x *DayTimeline) GetEmailsCount() int64 {
	if x != nil {
		return x.EmailsCount
	}
	return 0
}

type Event struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Type      TimelineEventType      `protobuf:"varint,1,opt,name=type,proto3,enum=webitel.contacts.TimelineEventType" json:"type,omitempty"`
	CreatedAt int64                  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*Event_Chat
	//	*Event_Call
	//	*Event_Email
	Event         isEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_contacts_timeline_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{8}
}

func (x *Event) GetType() TimelineEventType {
	if x != nil {
		return x.Type
	}
	return TimelineEventType_chat
}

func (x *Event) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Event) GetEvent() isEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Event) GetChat() *ChatEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_Chat); ok {
			return x.Chat
		}
	}
	return nil
}

func (x *Event) GetCall() *CallEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_Call); ok {
			return x.Call
		}
	}
	return nil
}

func (x *Event) GetEmail() *EmailEvent {
	if x != nil {
		if x, ok := x.Event.(*Event_Email); ok {
			return x.Email
		}
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_Chat struct {
	Chat *ChatEvent `protobuf:"bytes,3,opt,name=chat,proto3,oneof"`
}

type Event_Call struct {
	Call *CallEvent `protobuf:"bytes,4,opt,name=call,proto3,oneof"`
}

type Event_Email struct {
	Email *EmailEvent `protobuf:"bytes,5,opt,name=email,proto3,oneof"`
}

func (*Event_Chat) isEvent_Event() {}

func (*Event_Call) isEvent_Event() {}

func (*Event_Email) isEvent_Event() {}

type Attachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Mime          string                 `protobuf:"bytes,3,opt,name=mime,proto3" json:"mime,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_contacts_timeline_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{9}
}

func (x *Attachment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Attachment) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CallFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	MimeType      string                 `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	StartAt       int64                  `protobuf:"varint,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	StopAt        int64                  `protobuf:"varint,6,opt,name=stop_at,json=stopAt,proto3" json:"stop_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallFile) Reset() {
	*x = CallFile{}
	mi := &file_contacts_timeline_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallFile) ProtoMessage() {}

func (x *CallFile) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallFile.ProtoReflect.Descriptor instead.
func (*CallFile) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{10}
}

func (x *CallFile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CallFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CallFile) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *CallFile) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *CallFile) GetStopAt() int64 {
	if x != nil {
		return x.StopAt
	}
	return 0
}

type TranscriptLookup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Locale        string                 `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
	File          *Lookup                `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptLookup) Reset() {
	*x = TranscriptLookup{}
	mi := &file_contacts_timeline_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptLookup) ProtoMessage() {}

func (x *TranscriptLookup) ProtoReflect() protoreflect.Message {
	mi := &file_contacts_timeline_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptLookup.ProtoReflect.Descriptor instead.
func (*TranscriptLookup) Descriptor() ([]byte, []int) {
	return file_contacts_timeline_proto_rawDescGZIP(), []int{11}
}

func (x *TranscriptLookup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TranscriptLookup) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *TranscriptLookup) GetFile() *Lookup {
	if x != nil {
		return x.File
	}
	return nil
}

var File_contacts_timeline_proto protoreflect.FileDescriptor

const file_contacts_timeline_proto_rawDesc = "" +
	"\n" +
	"\x17contacts/timeline.proto\x12\x10webitel.contacts\x1a\x1cgoogle/api/annotations.proto\x1a\x15contacts/fields.proto\"\x96\x02\n" +
	"\x12GetTimelineRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x03R\x04page\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\f\n" +
	"\x01q\x18\x03 \x01(\tR\x01q\x12\x12\n" +
	"\x04sort\x18\x04 \x01(\tR\x04sort\x12\x16\n" +
	"\x06fields\x18\x05 \x03(\tR\x06fields\x12\x10\n" +
	"\x03ids\x18\x06 \x03(\tR\x03ids\x12\x1d\n" +
	"\n" +
	"contact_id\x18\a \x01(\tR\tcontactId\x12\x1b\n" +
	"\tdate_from\x18\b \x01(\x03R\bdateFrom\x12\x17\n" +
	"\adate_to\x18\t \x01(\x03R\x06dateTo\x127\n" +
	"\x04type\x18\n" +
	" \x03(\x0e2#.webitel.contacts.TimelineEventTypeR\x04type\"p\n" +
	"\x13GetTimelineResponse\x121\n" +
	"\x04days\x18\x02 \x03(\v2\x1d.webitel.contacts.DayTimelineR\x04days\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x03R\x04page\x12\x12\n" +
	"\x04next\x18\x04 \x01(\bR\x04next\":\n" +
	"\x19GetTimelineCounterRequest\x12\x1d\n" +
	"\n" +
	"contact_id\x18\x01 \x01(\tR\tcontactId\"\xb7\x01\n" +
	"\x1aGetTimelineCounterResponse\x12\x1b\n" +
	"\tdate_from\x18\x01 \x01(\x03R\bdateFrom\x12\x17\n" +
	"\adate_to\x18\x02 \x01(\x03R\x06dateTo\x12\x1f\n" +
	"\vchats_count\x18\x03 \x01(\x03R\n" +
	"chatsCount\x12\x1f\n" +
	"\vcalls_count\x18\x04 \x01(\x03R\n" +
	"callsCount\x12!\n" +
	"\femails_count\x18\x05 \x01(\x03R\vemailsCount\"\xad\x04\n" +
	"\tCallEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tclosed_at\x18\x03 \x01(\x03R\bclosedAt\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x03R\bduration\x12\x1d\n" +
	"\n" +
	"is_inbound\x18\x06 \x01(\bR\tisInbound\x12\x1b\n" +
	"\tis_missed\x18\a \x01(\bR\bisMissed\x12<\n" +
	"\fparticipants\x18\t \x03(\v2\x18.webitel.contacts.LookupR\fparticipants\x122\n" +
	"\agateway\x18\n" +
	" \x01(\v2\x18.webitel.contacts.LookupR\agateway\x129\n" +
	"\vflow_scheme\x18\v \x01(\v2\x18.webitel.contacts.LookupR\n" +
	"flowScheme\x12.\n" +
	"\x05queue\x18\f \x01(\v2\x18.webitel.contacts.LookupR\x05queue\x12\x1f\n" +
	"\vis_detailed\x18\r \x01(\bR\n" +
	"isDetailed\x120\n" +
	"\x05files\x18\x0e \x03(\v2\x1a.webitel.contacts.CallFileR\x05files\x12D\n" +
	"\vtranscripts\x18\x0f \x03(\v2\".webitel.contacts.TranscriptLookupR\vtranscripts\x12%\n" +
	"\x0etotal_duration\x18\x10 \x01(\x03R\rtotalDuration\"\x8e\x03\n" +
	"\tChatEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tclosed_at\x18\x03 \x01(\x03R\bclosedAt\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x03R\bduration\x12\x1d\n" +
	"\n" +
	"is_inbound\x18\x06 \x01(\bR\tisInbound\x12\x1b\n" +
	"\tis_missed\x18\a \x01(\bR\bisMissed\x12<\n" +
	"\fparticipants\x18\t \x03(\v2\x18.webitel.contacts.LookupR\fparticipants\x122\n" +
	"\agateway\x18\n" +
	" \x01(\v2\x18.webitel.contacts.LookupR\agateway\x129\n" +
	"\vflow_scheme\x18\v \x01(\v2\x18.webitel.contacts.LookupR\n" +
	"flowScheme\x12.\n" +
	"\x05queue\x18\f \x01(\v2\x18.webitel.contacts.LookupR\x05queue\x12\x1f\n" +
	"\vis_detailed\x18\r \x01(\bR\n" +
	"isDetailed\"\x8e\x03\n" +
	"\n" +
	"EmailEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04from\x18\x03 \x03(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x04 \x03(\tR\x02to\x12\x16\n" +
	"\x06sender\x18\x05 \x03(\tR\x06sender\x12\x0e\n" +
	"\x02cc\x18\x06 \x03(\tR\x02cc\x12\x1d\n" +
	"\n" +
	"is_inbound\x18\a \x01(\bR\tisInbound\x12\x18\n" +
	"\asubject\x18\b \x01(\tR\asubject\x12\x12\n" +
	"\x04body\x18\t \x01(\tR\x04body\x12\x12\n" +
	"\x04html\x18\n" +
	" \x01(\tR\x04html\x12.\n" +
	"\x05owner\x18\v \x01(\v2\x18.webitel.contacts.LookupR\x05owner\x12>\n" +
	"\vattachments\x18\f \x03(\v2\x1c.webitel.contacts.AttachmentR\vattachments\x122\n" +
	"\aprofile\x18\r \x01(\v2\x18.webitel.contacts.LookupR\aprofile\x12\x1f\n" +
	"\vis_detailed\x18\x0e \x01(\bR\n" +
	"isDetailed\"\xc6\x01\n" +
	"\vDayTimeline\x12-\n" +
	"\x05items\x18\x01 \x03(\v2\x17.webitel.contacts.EventR\x05items\x12#\n" +
	"\rday_timestamp\x18\x02 \x01(\x03R\fdayTimestamp\x12\x1f\n" +
	"\vchats_count\x18\x03 \x01(\x03R\n" +
	"chatsCount\x12\x1f\n" +
	"\vcalls_count\x18\x04 \x01(\x03R\n" +
	"callsCount\x12!\n" +
	"\femails_count\x18\x05 \x01(\x03R\vemailsCount\"\x84\x02\n" +
	"\x05Event\x127\n" +
	"\x04type\x18\x01 \x01(\x0e2#.webitel.contacts.TimelineEventTypeR\x04type\x12\x1d\n" +
	"\n" +
	"created_at\x18\x02 \x01(\x03R\tcreatedAt\x121\n" +
	"\x04chat\x18\x03 \x01(\v2\x1b.webitel.contacts.ChatEventH\x00R\x04chat\x121\n" +
	"\x04call\x18\x04 \x01(\v2\x1b.webitel.contacts.CallEventH\x00R\x04call\x124\n" +
	"\x05email\x18\x05 \x01(\v2\x1c.webitel.contacts.EmailEventH\x00R\x05emailB\a\n" +
	"\x05event\"j\n" +
	"\n" +
	"Attachment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04mime\x18\x03 \x01(\tR\x04mime\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\"\x93\x01\n" +
	"\bCallFile\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x1b\n" +
	"\tmime_type\x18\x04 \x01(\tR\bmimeType\x12\x19\n" +
	"\bstart_at\x18\x05 \x01(\x03R\astartAt\x12\x17\n" +
	"\astop_at\x18\x06 \x01(\x03R\x06stopAt\"h\n" +
	"\x10TranscriptLookup\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x16\n" +
	"\x06locale\x18\x02 \x01(\tR\x06locale\x12,\n" +
	"\x04file\x18\x03 \x01(\v2\x18.webitel.contacts.LookupR\x04file*2\n" +
	"\x11TimelineEventType\x12\b\n" +
	"\x04chat\x10\x00\x12\b\n" +
	"\x04call\x10\x01\x12\t\n" +
	"\x05email\x10\x022\xb3\x02\n" +
	"\bTimeline\x12\x83\x01\n" +
	"\vGetTimeline\x12$.webitel.contacts.GetTimelineRequest\x1a%.webitel.contacts.GetTimelineResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/contacts/{contact_id}/timeline\x12\xa0\x01\n" +
	"\x12GetTimelineCounter\x12+.webitel.contacts.GetTimelineCounterRequest\x1a,.webitel.contacts.GetTimelineCounterResponse\"/\x82\xd3\xe4\x93\x02)\x12'/contacts/{contact_id}/timeline/counterB\xa8\x01\n" +
	"\x14com.webitel.contactsB\rTimelineProtoP\x01Z webitel.go/api/contacts;contacts\xa2\x02\x03WCX\xaa\x02\x10Webitel.Contacts\xca\x02\x10Webitel\\Contacts\xe2\x02\x1cWebitel\\Contacts\\GPBMetadata\xea\x02\x11Webitel::Contactsb\x06proto3"

var (
	file_contacts_timeline_proto_rawDescOnce sync.Once
	file_contacts_timeline_proto_rawDescData []byte
)

func file_contacts_timeline_proto_rawDescGZIP() []byte {
	file_contacts_timeline_proto_rawDescOnce.Do(func() {
		file_contacts_timeline_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contacts_timeline_proto_rawDesc), len(file_contacts_timeline_proto_rawDesc)))
	})
	return file_contacts_timeline_proto_rawDescData
}

var file_contacts_timeline_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contacts_timeline_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_contacts_timeline_proto_goTypes = []any{
	(TimelineEventType)(0),             // 0: webitel.contacts.TimelineEventType
	(*GetTimelineRequest)(nil),         // 1: webitel.contacts.GetTimelineRequest
	(*GetTimelineResponse)(nil),        // 2: webitel.contacts.GetTimelineResponse
	(*GetTimelineCounterRequest)(nil),  // 3: webitel.contacts.GetTimelineCounterRequest
	(*GetTimelineCounterResponse)(nil), // 4: webitel.contacts.GetTimelineCounterResponse
	(*CallEvent)(nil),                  // 5: webitel.contacts.CallEvent
	(*ChatEvent)(nil),                  // 6: webitel.contacts.ChatEvent
	(*EmailEvent)(nil),                 // 7: webitel.contacts.EmailEvent
	(*DayTimeline)(nil),                // 8: webitel.contacts.DayTimeline
	(*Event)(nil),                      // 9: webitel.contacts.Event
	(*Attachment)(nil),                 // 10: webitel.contacts.Attachment
	(*CallFile)(nil),                   // 11: webitel.contacts.CallFile
	(*TranscriptLookup)(nil),           // 12: webitel.contacts.TranscriptLookup
	(*Lookup)(nil),                     // 13: webitel.contacts.Lookup
}
var file_contacts_timeline_proto_depIdxs = []int32{
	0,  // 0: webitel.contacts.GetTimelineRequest.type:type_name -> webitel.contacts.TimelineEventType
	8,  // 1: webitel.contacts.GetTimelineResponse.days:type_name -> webitel.contacts.DayTimeline
	13, // 2: webitel.contacts.CallEvent.participants:type_name -> webitel.contacts.Lookup
	13, // 3: webitel.contacts.CallEvent.gateway:type_name -> webitel.contacts.Lookup
	13, // 4: webitel.contacts.CallEvent.flow_scheme:type_name -> webitel.contacts.Lookup
	13, // 5: webitel.contacts.CallEvent.queue:type_name -> webitel.contacts.Lookup
	11, // 6: webitel.contacts.CallEvent.files:type_name -> webitel.contacts.CallFile
	12, // 7: webitel.contacts.CallEvent.transcripts:type_name -> webitel.contacts.TranscriptLookup
	13, // 8: webitel.contacts.ChatEvent.participants:type_name -> webitel.contacts.Lookup
	13, // 9: webitel.contacts.ChatEvent.gateway:type_name -> webitel.contacts.Lookup
	13, // 10: webitel.contacts.ChatEvent.flow_scheme:type_name -> webitel.contacts.Lookup
	13, // 11: webitel.contacts.ChatEvent.queue:type_name -> webitel.contacts.Lookup
	13, // 12: webitel.contacts.EmailEvent.owner:type_name -> webitel.contacts.Lookup
	10, // 13: webitel.contacts.EmailEvent.attachments:type_name -> webitel.contacts.Attachment
	13, // 14: webitel.contacts.EmailEvent.profile:type_name -> webitel.contacts.Lookup
	9,  // 15: webitel.contacts.DayTimeline.items:type_name -> webitel.contacts.Event
	0,  // 16: webitel.contacts.Event.type:type_name -> webitel.contacts.TimelineEventType
	6,  // 17: webitel.contacts.Event.chat:type_name -> webitel.contacts.ChatEvent
	5,  // 18: webitel.contacts.Event.call:type_name -> webitel.contacts.CallEvent
	7,  // 19: webitel.contacts.Event.email:type_name -> webitel.contacts.EmailEvent
	13, // 20: webitel.contacts.TranscriptLookup.file:type_name -> webitel.contacts.Lookup
	1,  // 21: webitel.contacts.Timeline.GetTimeline:input_type -> webitel.contacts.GetTimelineRequest
	3,  // 22: webitel.contacts.Timeline.GetTimelineCounter:input_type -> webitel.contacts.GetTimelineCounterRequest
	2,  // 23: webitel.contacts.Timeline.GetTimeline:output_type -> webitel.contacts.GetTimelineResponse
	4,  // 24: webitel.contacts.Timeline.GetTimelineCounter:output_type -> webitel.contacts.GetTimelineCounterResponse
	23, // [23:25] is the sub-list for method output_type
	21, // [21:23] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_contacts_timeline_proto_init() }
func file_contacts_timeline_proto_init() {
	if File_contacts_timeline_proto != nil {
		return
	}
	file_contacts_fields_proto_init()
	file_contacts_timeline_proto_msgTypes[8].OneofWrappers = []any{
		(*Event_Chat)(nil),
		(*Event_Call)(nil),
		(*Event_Email)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contacts_timeline_proto_rawDesc), len(file_contacts_timeline_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contacts_timeline_proto_goTypes,
		DependencyIndexes: file_contacts_timeline_proto_depIdxs,
		EnumInfos:         file_contacts_timeline_proto_enumTypes,
		MessageInfos:      file_contacts_timeline_proto_msgTypes,
	}.Build()
	File_contacts_timeline_proto = out.File
	file_contacts_timeline_proto_goTypes = nil
	file_contacts_timeline_proto_depIdxs = nil
}

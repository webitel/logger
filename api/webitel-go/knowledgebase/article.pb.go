// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: knowledgebase/article.proto

package spaces

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Article struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the association. Never changes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// READONLY. Operational attributes
	// Version of the latest update. Numeric sequence.
	Ver int32 `protobuf:"varint,2,opt,name=ver,proto3" json:"ver,omitempty"`
	// Unique ID of the latest version of the update.
	// This ID changes after any update to the underlying value(s).
	Etag string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	// The user who created this Field.
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Timestamp(milli) of the Field creation.
	CreatedBy *Lookup `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// Timestamp(milli) of the last Field update.
	// Take part in Etag generation.
	UpdatedAt int64 `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// The user who performed last Update.
	UpdatedBy *Lookup `protobuf:"bytes,7,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	// Space ID associated with.
	SpaceId int64 `protobuf:"varint,8,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// Indicates the state of the article.
	State bool `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	// The text content of the article.
	Text string `protobuf:"bytes,10,opt,name=text,proto3" json:"text,omitempty"`
	// Tags associated with the article.
	Tags []string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	// The title of the article.
	Title string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`
	// The parent article ID.
	ParentArticle int64 `protobuf:"varint,13,opt,name=parent_article,json=parentArticle,proto3" json:"parent_article,omitempty"`
	// Indicates that the article has children.
	HasChildren bool `protobuf:"varint,14,opt,name=has_children,json=hasChildren,proto3" json:"has_children,omitempty"`
	// Indicates that the article is pinned on the top of list.
	Pinned        bool `protobuf:"varint,15,opt,name=pinned,proto3" json:"pinned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Article) Reset() {
	*x = Article{}
	mi := &file_knowledgebase_article_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{0}
}

func (x *Article) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Article) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

func (x *Article) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *Article) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Article) GetCreatedBy() *Lookup {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Article) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Article) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *Article) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *Article) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *Article) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Article) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetParentArticle() int64 {
	if x != nil {
		return x.ParentArticle
	}
	return 0
}

func (x *Article) GetHasChildren() bool {
	if x != nil {
		return x.HasChildren
	}
	return false
}

func (x *Article) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

// An input of the Space's Articles.
type InputArticle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique ID of the latest version of an existing resource.
	Etag string `protobuf:"bytes,1,opt,name=etag,proto3" json:"etag,omitempty"`
	// [VALUE]: --------------------------------------
	// Space ID associated with.
	SpaceId int64 `protobuf:"varint,8,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// Indicates if article is active and actual.
	State bool `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	// The text content of the article.
	Text string `protobuf:"bytes,10,opt,name=text,proto3" json:"text,omitempty"`
	// Tags associated with the article.
	Tags []string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	// The title of the article.
	Title string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`
	// The parent article ID.
	ParentArticle int64 `protobuf:"varint,13,opt,name=parent_article,json=parentArticle,proto3" json:"parent_article,omitempty"`
	// Indicates that the article is pinned on the top of list.
	Pinned        bool `protobuf:"varint,15,opt,name=pinned,proto3" json:"pinned,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InputArticle) Reset() {
	*x = InputArticle{}
	mi := &file_knowledgebase_article_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputArticle) ProtoMessage() {}

func (x *InputArticle) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputArticle.ProtoReflect.Descriptor instead.
func (*InputArticle) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{1}
}

func (x *InputArticle) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *InputArticle) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *InputArticle) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *InputArticle) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *InputArticle) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *InputArticle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *InputArticle) GetParentArticle() int64 {
	if x != nil {
		return x.ParentArticle
	}
	return 0
}

func (x *InputArticle) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

// Article dataset.
// NOTE: Edge represents connection between two nodes.
// So this spaceArticles.data are always subordinate to some space.id.
type ArticleList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Article dataset page.
	Data []*Article `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// The page number of the partial result.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Indicates that this is a partial result.
	// More data available upon query: ?size=${data.len}&page=${page++}
	Next          bool `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArticleList) Reset() {
	*x = ArticleList{}
	mi := &file_knowledgebase_article_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArticleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleList) ProtoMessage() {}

func (x *ArticleList) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleList.ProtoReflect.Descriptor instead.
func (*ArticleList) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{2}
}

func (x *ArticleList) GetData() []*Article {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ArticleList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ArticleList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

// Search for the space's Article(s) request.
type ListArticlesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of result dataset records. offset = (page*size)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size count of records on result page. limit = (size++)
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Sort the result according to fields.
	Sort []string `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	// Search term: location name;
	// `?` - matches any one character
	// `*` - matches 0 or more characters
	Q string `protobuf:"bytes,6,opt,name=q,proto3" json:"q,omitempty"`
	// Space ID associated with.
	SpaceId string `protobuf:"bytes,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// Record(s) with unique ID only.
	ArticleId string `protobuf:"bytes,7,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	// Active Article only.
	State *wrapperspb.BoolValue `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	// Tags associated with the article.
	Tags          []string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArticlesRequest) Reset() {
	*x = ListArticlesRequest{}
	mi := &file_knowledgebase_article_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArticlesRequest) ProtoMessage() {}

func (x *ListArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArticlesRequest.ProtoReflect.Descriptor instead.
func (*ListArticlesRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{3}
}

func (x *ListArticlesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListArticlesRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListArticlesRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListArticlesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *ListArticlesRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *ListArticlesRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListArticlesRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *ListArticlesRequest) GetState() *wrapperspb.BoolValue {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *ListArticlesRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Locate single Link by unique IDentifier.
type LocateArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved into result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Space ID associated with.
	SpaceId string `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// Unique Article link IDentifier.
	// Accept: `etag` (obsolete+) or `id`.
	Etag          string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateArticleRequest) Reset() {
	*x = LocateArticleRequest{}
	mi := &file_knowledgebase_article_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateArticleRequest) ProtoMessage() {}

func (x *LocateArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateArticleRequest.ProtoReflect.Descriptor instead.
func (*LocateArticleRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{4}
}

func (x *LocateArticleRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *LocateArticleRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *LocateArticleRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type CreateArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON PATCH fields mask.
	// List of JPath fields specified in body(input).
	XJsonMask []string `protobuf:"bytes,1,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	// Fields to be retrieved into result of changes.
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	// Link space ID.
	SpaceId string `protobuf:"bytes,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// NEW Update of the Article link.
	Input         *InputArticle `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateArticleRequest) Reset() {
	*x = CreateArticleRequest{}
	mi := &file_knowledgebase_article_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleRequest) ProtoMessage() {}

func (x *CreateArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleRequest.ProtoReflect.Descriptor instead.
func (*CreateArticleRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{5}
}

func (x *CreateArticleRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

func (x *CreateArticleRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *CreateArticleRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *CreateArticleRequest) GetInput() *InputArticle {
	if x != nil {
		return x.Input
	}
	return nil
}

type UpdateArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON PATCH fields mask.
	// List of JPath fields specified in body(input).
	XJsonMask []string `protobuf:"bytes,1,rep,name=x_json_mask,json=xJsonMask,proto3" json:"x_json_mask,omitempty"`
	// Fields to be retrieved into result of changes.
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	// Link space ID.
	SpaceId string `protobuf:"bytes,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// NEW Update of the Article link.
	Input         *InputArticle `protobuf:"bytes,4,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateArticleRequest) Reset() {
	*x = UpdateArticleRequest{}
	mi := &file_knowledgebase_article_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleRequest) ProtoMessage() {}

func (x *UpdateArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleRequest.ProtoReflect.Descriptor instead.
func (*UpdateArticleRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateArticleRequest) GetXJsonMask() []string {
	if x != nil {
		return x.XJsonMask
	}
	return nil
}

func (x *UpdateArticleRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateArticleRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *UpdateArticleRequest) GetInput() *InputArticle {
	if x != nil {
		return x.Input
	}
	return nil
}

type DeleteArticleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Fields to be retrieved as a result.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// Space ID associated with.
	SpaceId string `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// Unique ID to remove.
	Etag          string `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteArticleRequest) Reset() {
	*x = DeleteArticleRequest{}
	mi := &file_knowledgebase_article_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticleRequest) ProtoMessage() {}

func (x *DeleteArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticleRequest.ProtoReflect.Descriptor instead.
func (*DeleteArticleRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteArticleRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DeleteArticleRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *DeleteArticleRequest) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type ListAttachmentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of result dataset records. offset = (page*size)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size count of records on result page. limit = (size++)
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Sort the result according to fields.
	Sort []string `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	// Space ID associated with.
	SpaceId string `protobuf:"bytes,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// Record(s) with unique ID only.
	ArticleId     string `protobuf:"bytes,7,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAttachmentsRequest) Reset() {
	*x = ListAttachmentsRequest{}
	mi := &file_knowledgebase_article_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAttachmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAttachmentsRequest) ProtoMessage() {}

func (x *ListAttachmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAttachmentsRequest.ProtoReflect.Descriptor instead.
func (*ListAttachmentsRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{8}
}

func (x *ListAttachmentsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListAttachmentsRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListAttachmentsRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListAttachmentsRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

func (x *ListAttachmentsRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

type AttachmentList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Attachment dataset page.
	Data []*Attachment `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// The page number of the partial result.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Indicates that this is a partial result.
	// More data available upon query: ?size=${data.len}&page=${page++}
	Next          bool `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachmentList) Reset() {
	*x = AttachmentList{}
	mi := &file_knowledgebase_article_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentList) ProtoMessage() {}

func (x *AttachmentList) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentList.ProtoReflect.Descriptor instead.
func (*AttachmentList) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{9}
}

func (x *AttachmentList) GetData() []*Attachment {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AttachmentList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AttachmentList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type Attachment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the association. Never changes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The title of the article.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The size of the attachment.
	Size int32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// The user who loaded this attachment.
	UploadedBy    *Lookup `protobuf:"bytes,4,opt,name=uploaded_by,json=uploadedBy,proto3" json:"uploaded_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_knowledgebase_article_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{10}
}

func (x *Attachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Attachment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Attachment) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Attachment) GetUploadedBy() *Lookup {
	if x != nil {
		return x.UploadedBy
	}
	return nil
}

type ArticleVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique ID of the association. Never changes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The title of the article.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The text content of the article.
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	// The user who loaded this attachment.
	UpdatedBy *Lookup `protobuf:"bytes,4,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	// Timestamp(milli) of the last Field update.
	UpdatedAt int64 `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// The parent article ID.
	ParentArticle int64 `protobuf:"varint,6,opt,name=parent_article,json=parentArticle,proto3" json:"parent_article,omitempty"`
	// Tags associated with the article.
	Tags []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	// Space ID associated with.
	SpaceId int64 `protobuf:"varint,8,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// Version of the latest update. Numeric sequence.
	Ver           int32 `protobuf:"varint,9,opt,name=ver,proto3" json:"ver,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArticleVersion) Reset() {
	*x = ArticleVersion{}
	mi := &file_knowledgebase_article_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArticleVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleVersion) ProtoMessage() {}

func (x *ArticleVersion) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleVersion.ProtoReflect.Descriptor instead.
func (*ArticleVersion) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{11}
}

func (x *ArticleVersion) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ArticleVersion) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleVersion) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ArticleVersion) GetUpdatedBy() *Lookup {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

func (x *ArticleVersion) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ArticleVersion) GetParentArticle() int64 {
	if x != nil {
		return x.ParentArticle
	}
	return 0
}

func (x *ArticleVersion) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ArticleVersion) GetSpaceId() int64 {
	if x != nil {
		return x.SpaceId
	}
	return 0
}

func (x *ArticleVersion) GetVer() int32 {
	if x != nil {
		return x.Ver
	}
	return 0
}

type ArticleVersionList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Data  []*ArticleVersion      `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	// The page number of the partial result.
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Indicates that this is a partial result.
	// More data available upon query: ?size=${data.len}&page=${page++}
	Next          bool `protobuf:"varint,3,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArticleVersionList) Reset() {
	*x = ArticleVersionList{}
	mi := &file_knowledgebase_article_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArticleVersionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleVersionList) ProtoMessage() {}

func (x *ArticleVersionList) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleVersionList.ProtoReflect.Descriptor instead.
func (*ArticleVersionList) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{12}
}

func (x *ArticleVersionList) GetData() []*ArticleVersion {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ArticleVersionList) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ArticleVersionList) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type ListArticleVersionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number of result dataset records. offset = (page*size)
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// Size count of records on result page. limit = (size++)
	Size int32 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	// Sort the result according to fields.
	Sort []string `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	// Record(s) with unique ID only.
	ArticleId string `protobuf:"bytes,7,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	// Space ID associated with.
	SpaceId       string `protobuf:"bytes,5,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListArticleVersionsRequest) Reset() {
	*x = ListArticleVersionsRequest{}
	mi := &file_knowledgebase_article_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListArticleVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListArticleVersionsRequest) ProtoMessage() {}

func (x *ListArticleVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListArticleVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListArticleVersionsRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{13}
}

func (x *ListArticleVersionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListArticleVersionsRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListArticleVersionsRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListArticleVersionsRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *ListArticleVersionsRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type LocateArticleVersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Record(s) with unique ID only.
	ArticleId string `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	// The unique ID of version record
	VersionId int64 `protobuf:"varint,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Space ID associated with.
	SpaceId       string `protobuf:"bytes,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocateArticleVersionRequest) Reset() {
	*x = LocateArticleVersionRequest{}
	mi := &file_knowledgebase_article_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocateArticleVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocateArticleVersionRequest) ProtoMessage() {}

func (x *LocateArticleVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_knowledgebase_article_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocateArticleVersionRequest.ProtoReflect.Descriptor instead.
func (*LocateArticleVersionRequest) Descriptor() ([]byte, []int) {
	return file_knowledgebase_article_proto_rawDescGZIP(), []int{14}
}

func (x *LocateArticleVersionRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *LocateArticleVersionRequest) GetVersionId() int64 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *LocateArticleVersionRequest) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

var File_knowledgebase_article_proto protoreflect.FileDescriptor

const file_knowledgebase_article_proto_rawDesc = "" +
	"\n" +
	"\x1bknowledgebase/article.proto\x12\x15webitel.knowledgebase\x1a\x1aknowledgebase/fields.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xca\x03\n" +
	"\aArticle\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03ver\x18\x02 \x01(\x05R\x03ver\x12\x12\n" +
	"\x04etag\x18\x03 \x01(\tR\x04etag\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12<\n" +
	"\n" +
	"created_by\x18\x05 \x01(\v2\x1d.webitel.knowledgebase.LookupR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\x03R\tupdatedAt\x12<\n" +
	"\n" +
	"updated_by\x18\a \x01(\v2\x1d.webitel.knowledgebase.LookupR\tupdatedBy\x12\x19\n" +
	"\bspace_id\x18\b \x01(\x03R\aspaceId\x12\x14\n" +
	"\x05state\x18\t \x01(\bR\x05state\x12\x12\n" +
	"\x04text\x18\n" +
	" \x01(\tR\x04text\x12\x12\n" +
	"\x04tags\x18\v \x03(\tR\x04tags\x12\x14\n" +
	"\x05title\x18\f \x01(\tR\x05title\x12%\n" +
	"\x0eparent_article\x18\r \x01(\x03R\rparentArticle\x12!\n" +
	"\fhas_children\x18\x0e \x01(\bR\vhasChildren\x12\x16\n" +
	"\x06pinned\x18\x0f \x01(\bR\x06pinned\"\xed\x01\n" +
	"\fInputArticle\x12!\n" +
	"\x04etag\x18\x01 \x01(\tB\r\x92A\n" +
	"\xca>\a\xfa\x02\x04etagR\x04etag\x12\x19\n" +
	"\bspace_id\x18\b \x01(\x03R\aspaceId\x12\x14\n" +
	"\x05state\x18\t \x01(\bR\x05state\x12\x12\n" +
	"\x04text\x18\n" +
	" \x01(\tR\x04text\x12\x12\n" +
	"\x04tags\x18\v \x03(\tR\x04tags\x12\x14\n" +
	"\x05title\x18\f \x01(\tR\x05title\x12%\n" +
	"\x0eparent_article\x18\r \x01(\x03R\rparentArticle\x12\x16\n" +
	"\x06pinned\x18\x0f \x01(\bR\x06pinned:\f\x92A\t\n" +
	"\a\xd2\x01\x04etag\"n\n" +
	"\vArticleList\x122\n" +
	"\x04data\x18\x01 \x03(\v2\x1e.webitel.knowledgebase.ArticleR\x04data\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x03 \x01(\bR\x04next:\x03\x92A\x00\"\xf7\x01\n" +
	"\x13ListArticlesRequest\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x05R\x04size\x12\x12\n" +
	"\x04sort\x18\x03 \x03(\tR\x04sort\x12\x16\n" +
	"\x06fields\x18\x04 \x03(\tR\x06fields\x12\f\n" +
	"\x01q\x18\x06 \x01(\tR\x01q\x12\x19\n" +
	"\bspace_id\x18\x05 \x01(\tR\aspaceId\x12\x1d\n" +
	"\n" +
	"article_id\x18\a \x01(\tR\tarticleId\x120\n" +
	"\x05state\x18\b \x01(\v2\x1a.google.protobuf.BoolValueR\x05state\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\"h\n" +
	"\x14LocateArticleRequest\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x19\n" +
	"\bspace_id\x18\x02 \x01(\tR\aspaceId\x12\x1d\n" +
	"\x04etag\x18\x03 \x01(\tB\t\x92A\x06\xa2\x02\x03\\w+R\x04etag\"\xd9\x01\n" +
	"\x14CreateArticleRequest\x129\n" +
	"\vx_json_mask\x18\x01 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12\x19\n" +
	"\bspace_id\x18\x03 \x01(\tR\aspaceId\x129\n" +
	"\x05input\x18\x04 \x01(\v2#.webitel.knowledgebase.InputArticleR\x05input:\x18\x92A\x15\n" +
	"\x13\xd2\x01\bspace_id\xd2\x01\x05input\"\xd9\x01\n" +
	"\x14UpdateArticleRequest\x129\n" +
	"\vx_json_mask\x18\x01 \x03(\tB\x19\x92A\a@\x01\x8a\x01\x02^$\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\txJsonMask\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12\x19\n" +
	"\bspace_id\x18\x03 \x01(\tR\aspaceId\x129\n" +
	"\x05input\x18\x04 \x01(\v2#.webitel.knowledgebase.InputArticleR\x05input:\x18\x92A\x15\n" +
	"\x13\xd2\x01\bspace_id\xd2\x01\x05input\"\x83\x01\n" +
	"\x14DeleteArticleRequest\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x19\n" +
	"\bspace_id\x18\x02 \x01(\tR\aspaceId\x12\x1f\n" +
	"\x04etag\x18\x03 \x01(\tB\v\x92A\b\x8a\x01\x05^\\.+$R\x04etag:\x17\x92A\x14\n" +
	"\x12\xd2\x01\bspace_id\xd2\x01\x04etag\"\x8e\x01\n" +
	"\x16ListAttachmentsRequest\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x05R\x04size\x12\x12\n" +
	"\x04sort\x18\x03 \x03(\tR\x04sort\x12\x19\n" +
	"\bspace_id\x18\x05 \x01(\tR\aspaceId\x12\x1d\n" +
	"\n" +
	"article_id\x18\a \x01(\tR\tarticleId\"o\n" +
	"\x0eAttachmentList\x125\n" +
	"\x04data\x18\x01 \x03(\v2!.webitel.knowledgebase.AttachmentR\x04data\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x03 \x01(\bR\x04next\"\x86\x01\n" +
	"\n" +
	"Attachment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\x12>\n" +
	"\vuploaded_by\x18\x04 \x01(\v2\x1d.webitel.knowledgebase.LookupR\n" +
	"uploadedBy\"\x8f\x02\n" +
	"\x0eArticleVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\x12<\n" +
	"\n" +
	"updated_by\x18\x04 \x01(\v2\x1d.webitel.knowledgebase.LookupR\tupdatedBy\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\x03R\tupdatedAt\x12%\n" +
	"\x0eparent_article\x18\x06 \x01(\x03R\rparentArticle\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12\x19\n" +
	"\bspace_id\x18\b \x01(\x03R\aspaceId\x12\x10\n" +
	"\x03ver\x18\t \x01(\x05R\x03ver\"w\n" +
	"\x12ArticleVersionList\x129\n" +
	"\x04data\x18\x01 \x03(\v2%.webitel.knowledgebase.ArticleVersionR\x04data\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04next\x18\x03 \x01(\bR\x04next\"\x92\x01\n" +
	"\x1aListArticleVersionsRequest\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x05R\x04size\x12\x12\n" +
	"\x04sort\x18\x03 \x03(\tR\x04sort\x12\x1d\n" +
	"\n" +
	"article_id\x18\a \x01(\tR\tarticleId\x12\x19\n" +
	"\bspace_id\x18\x05 \x01(\tR\aspaceId\"v\n" +
	"\x1bLocateArticleVersionRequest\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\x12\x1d\n" +
	"\n" +
	"version_id\x18\x02 \x01(\x03R\tversionId\x12\x19\n" +
	"\bspace_id\x18\x03 \x01(\tR\aspaceId2\xa1\n" +
	"\n" +
	"\bArticles\x12\xb9\x01\n" +
	"\fListArticles\x12*.webitel.knowledgebase.ListArticlesRequest\x1a\".webitel.knowledgebase.ArticleList\"Y\x82\xd3\xe4\x93\x02SZ4\x122/spaces/{space_id}/articles/{article_id}/childrens\x12\x1b/spaces/{space_id}/articles\x12\x88\x01\n" +
	"\rLocateArticle\x12+.webitel.knowledgebase.LocateArticleRequest\x1a\x1e.webitel.knowledgebase.Article\"*\x82\xd3\xe4\x93\x02$\x12\"/spaces/{space_id}/articles/{etag}\x12\x8c\x01\n" +
	"\rCreateArticle\x12+.webitel.knowledgebase.CreateArticleRequest\x1a\".webitel.knowledgebase.ArticleList\"*\x82\xd3\xe4\x93\x02$:\x05input\"\x1b/spaces/{space_id}/articles\x12\x99\x01\n" +
	"\rUpdateArticle\x12+.webitel.knowledgebase.UpdateArticleRequest\x1a\".webitel.knowledgebase.ArticleList\"7\x82\xd3\xe4\x93\x021:\x05input2(/spaces/{space_id}/articles/{input.etag}\x12\x88\x01\n" +
	"\rDeleteArticle\x12+.webitel.knowledgebase.DeleteArticleRequest\x1a\x1e.webitel.knowledgebase.Article\"*\x82\xd3\xe4\x93\x02$*\"/spaces/{space_id}/articles/{etag}\x12\xac\x01\n" +
	"\x16ArticlesAttachmentList\x12-.webitel.knowledgebase.ListAttachmentsRequest\x1a%.webitel.knowledgebase.AttachmentList\"<\x82\xd3\xe4\x93\x026\x124/spaces/{space_id}/articles/{article_id}/attachments\x12\xad\x01\n" +
	"\x13ArticleVersionsList\x121.webitel.knowledgebase.ListArticleVersionsRequest\x1a).webitel.knowledgebase.ArticleVersionList\"8\x82\xd3\xe4\x93\x022\x120/spaces/{space_id}/articles/{article_id}/history\x12\xb8\x01\n" +
	"\x14LocateArticleVersion\x122.webitel.knowledgebase.LocateArticleVersionRequest\x1a%.webitel.knowledgebase.ArticleVersion\"E\x82\xd3\xe4\x93\x02?\x12=/spaces/{space_id}/articles/{article_id}/history/{version_id}B\xbc\x01\n" +
	"\x19com.webitel.knowledgebaseB\fArticleProtoP\x01Z\x1cwebitel.go/api/spaces;spaces\xa2\x02\x03WKX\xaa\x02\x15Webitel.Knowledgebase\xca\x02\x15Webitel\\Knowledgebase\xe2\x02!Webitel\\Knowledgebase\\GPBMetadata\xea\x02\x16Webitel::Knowledgebaseb\x06proto3"

var (
	file_knowledgebase_article_proto_rawDescOnce sync.Once
	file_knowledgebase_article_proto_rawDescData []byte
)

func file_knowledgebase_article_proto_rawDescGZIP() []byte {
	file_knowledgebase_article_proto_rawDescOnce.Do(func() {
		file_knowledgebase_article_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_knowledgebase_article_proto_rawDesc), len(file_knowledgebase_article_proto_rawDesc)))
	})
	return file_knowledgebase_article_proto_rawDescData
}

var file_knowledgebase_article_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_knowledgebase_article_proto_goTypes = []any{
	(*Article)(nil),                     // 0: webitel.knowledgebase.Article
	(*InputArticle)(nil),                // 1: webitel.knowledgebase.InputArticle
	(*ArticleList)(nil),                 // 2: webitel.knowledgebase.ArticleList
	(*ListArticlesRequest)(nil),         // 3: webitel.knowledgebase.ListArticlesRequest
	(*LocateArticleRequest)(nil),        // 4: webitel.knowledgebase.LocateArticleRequest
	(*CreateArticleRequest)(nil),        // 5: webitel.knowledgebase.CreateArticleRequest
	(*UpdateArticleRequest)(nil),        // 6: webitel.knowledgebase.UpdateArticleRequest
	(*DeleteArticleRequest)(nil),        // 7: webitel.knowledgebase.DeleteArticleRequest
	(*ListAttachmentsRequest)(nil),      // 8: webitel.knowledgebase.ListAttachmentsRequest
	(*AttachmentList)(nil),              // 9: webitel.knowledgebase.AttachmentList
	(*Attachment)(nil),                  // 10: webitel.knowledgebase.Attachment
	(*ArticleVersion)(nil),              // 11: webitel.knowledgebase.ArticleVersion
	(*ArticleVersionList)(nil),          // 12: webitel.knowledgebase.ArticleVersionList
	(*ListArticleVersionsRequest)(nil),  // 13: webitel.knowledgebase.ListArticleVersionsRequest
	(*LocateArticleVersionRequest)(nil), // 14: webitel.knowledgebase.LocateArticleVersionRequest
	(*Lookup)(nil),                      // 15: webitel.knowledgebase.Lookup
	(*wrapperspb.BoolValue)(nil),        // 16: google.protobuf.BoolValue
}
var file_knowledgebase_article_proto_depIdxs = []int32{
	15, // 0: webitel.knowledgebase.Article.created_by:type_name -> webitel.knowledgebase.Lookup
	15, // 1: webitel.knowledgebase.Article.updated_by:type_name -> webitel.knowledgebase.Lookup
	0,  // 2: webitel.knowledgebase.ArticleList.data:type_name -> webitel.knowledgebase.Article
	16, // 3: webitel.knowledgebase.ListArticlesRequest.state:type_name -> google.protobuf.BoolValue
	1,  // 4: webitel.knowledgebase.CreateArticleRequest.input:type_name -> webitel.knowledgebase.InputArticle
	1,  // 5: webitel.knowledgebase.UpdateArticleRequest.input:type_name -> webitel.knowledgebase.InputArticle
	10, // 6: webitel.knowledgebase.AttachmentList.data:type_name -> webitel.knowledgebase.Attachment
	15, // 7: webitel.knowledgebase.Attachment.uploaded_by:type_name -> webitel.knowledgebase.Lookup
	15, // 8: webitel.knowledgebase.ArticleVersion.updated_by:type_name -> webitel.knowledgebase.Lookup
	11, // 9: webitel.knowledgebase.ArticleVersionList.data:type_name -> webitel.knowledgebase.ArticleVersion
	3,  // 10: webitel.knowledgebase.Articles.ListArticles:input_type -> webitel.knowledgebase.ListArticlesRequest
	4,  // 11: webitel.knowledgebase.Articles.LocateArticle:input_type -> webitel.knowledgebase.LocateArticleRequest
	5,  // 12: webitel.knowledgebase.Articles.CreateArticle:input_type -> webitel.knowledgebase.CreateArticleRequest
	6,  // 13: webitel.knowledgebase.Articles.UpdateArticle:input_type -> webitel.knowledgebase.UpdateArticleRequest
	7,  // 14: webitel.knowledgebase.Articles.DeleteArticle:input_type -> webitel.knowledgebase.DeleteArticleRequest
	8,  // 15: webitel.knowledgebase.Articles.ArticlesAttachmentList:input_type -> webitel.knowledgebase.ListAttachmentsRequest
	13, // 16: webitel.knowledgebase.Articles.ArticleVersionsList:input_type -> webitel.knowledgebase.ListArticleVersionsRequest
	14, // 17: webitel.knowledgebase.Articles.LocateArticleVersion:input_type -> webitel.knowledgebase.LocateArticleVersionRequest
	2,  // 18: webitel.knowledgebase.Articles.ListArticles:output_type -> webitel.knowledgebase.ArticleList
	0,  // 19: webitel.knowledgebase.Articles.LocateArticle:output_type -> webitel.knowledgebase.Article
	2,  // 20: webitel.knowledgebase.Articles.CreateArticle:output_type -> webitel.knowledgebase.ArticleList
	2,  // 21: webitel.knowledgebase.Articles.UpdateArticle:output_type -> webitel.knowledgebase.ArticleList
	0,  // 22: webitel.knowledgebase.Articles.DeleteArticle:output_type -> webitel.knowledgebase.Article
	9,  // 23: webitel.knowledgebase.Articles.ArticlesAttachmentList:output_type -> webitel.knowledgebase.AttachmentList
	12, // 24: webitel.knowledgebase.Articles.ArticleVersionsList:output_type -> webitel.knowledgebase.ArticleVersionList
	11, // 25: webitel.knowledgebase.Articles.LocateArticleVersion:output_type -> webitel.knowledgebase.ArticleVersion
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_knowledgebase_article_proto_init() }
func file_knowledgebase_article_proto_init() {
	if File_knowledgebase_article_proto != nil {
		return
	}
	file_knowledgebase_fields_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_knowledgebase_article_proto_rawDesc), len(file_knowledgebase_article_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_knowledgebase_article_proto_goTypes,
		DependencyIndexes: file_knowledgebase_article_proto_depIdxs,
		MessageInfos:      file_knowledgebase_article_proto_msgTypes,
	}.Build()
	File_knowledgebase_article_proto = out.File
	file_knowledgebase_article_proto_goTypes = nil
	file_knowledgebase_article_proto_depIdxs = nil
}
